!function(t){var e={};function r(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)r.d(n,s,function(e){return t[e]}.bind(null,s));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=80)}({18:function(t,e,r){"use strict";function n(t,e){let r=null,n=null;return async()=>{r=!0,n||(n=(async()=>{for(;r;)r=!1,await e(),await s(t);n=null})())}}function s(t){return new Promise(e=>t.requestAnimationFrame(e))}r.d(e,"a",(function(){return n}))},80:function(t,e,r){"use strict";r.r(e);var n=r(18);function s(t,e){const r=t.all.flatMap(t=>{const r=a(t.name,e);return r?{...t,highlightedName:r}:[]});return t.status=r.length+" matched prefabs",r}function i(t,e){const{all:r,blockPrefabIndex:n,blockLabels:s}=t,i=function(t,e,r){return Object.entries(e).reduce((e,[n,s])=>{const i=a(n,t),l=r[n],o=l&&a(l,t);return i||o?e.concat({name:n,highlightedName:i||n,highlightedLabel:o||l,prefabs:s}):e},[])}(e,n,s);if(0===i.length)return t.status="No matched blocks",[];const l=function(t){return t.reduce((t,e)=>{const{name:r,highlightedName:n,highlightedLabel:s}=e;return e.prefabs.forEach(e=>{const i={name:r,highlightedName:n,highlightedLabel:s,count:e.count};t[e.name]=(t[e.name]||[]).concat(i)}),t},{})}(i);if(0===Object.keys(l).length)return t.status=`No prefabs, ${i.length} matched blocks`,[];const o=r.flatMap(t=>{const e=l[t.name];return e?{...t,matchedBlocks:e}:[]});return t.status=`${o.length} prefabs, ${i.length} matched blocks`,o}function a(t,e){let r=!1;const n=t.replace(e,t=>(r=t.length>0,`<mark>${t}</mark>`));return r?n:null}const l=new Set(["all","prefabsFilterString","blocksFilterString","markCoords","blockPrefabIndex","blockLabels"]),o=new class{constructor(t){this.window=t,this.all=[],this.filtered=[],this.prevFiltered=[],this.filter=null,this.prefabsFilterString="",this.blocksFilterString="",this.markCoords=null,this.blockPrefabIndex={},this.blockLabels={},this.updateListeners=[],this.status="",this.lazyUpdater=Object(n.a)(t,async()=>this.updateImmediately())}update(){this.lazyUpdater()}updateImmediately(){var t;!function(t){t.filter?t.filtered=t.filter.func(t,t.filter.pattern):(0===t.all.length?t.status="No prefabs":t.status="All prefabs",t.filtered=t.all)}(this),(t=this).markCoords?t.filtered.forEach(e=>{const r=(n=e,s=t.markCoords,Math.round(Math.sqrt((n.x-s.x)**2+(n.y-s.z)**2)));var n,s;e.dist=r}):t.filtered.forEach(t=>{t.dist=null}),function(t){t.markCoords?t.filtered.sort((t,e)=>t.dist>e.dist?1:t.dist<e.dist?-1:0):t.filtered.sort((t,e)=>t.name>e.name?1:t.name<e.name?-1:0)}(this);const e={status:this.status};this.prevFiltered===this.filtered&&this.prevMarkCoords===this.markCoords||(e.prefabs=this.filtered,this.prevFiltered=this.filtered,this.prevMarkCoords=this.markCoords),this.updateListeners.forEach(t=>t(e))}set prefabsFilterString(t){const e=t.trim();0===e.length?this.filter=null:this.filter={name:"prefab name",func:s,pattern:new RegExp(e,"i")}}set blocksFilterString(t){const e=t.trim();0===e.length?this.filter=null:this.filter={name:"block name",func:i,pattern:new RegExp(e,"i")}}addUpdateListener(t){this.updateListeners.push(t)}}(self);onmessage=t=>{Object.entries(t.data).forEach(([t,e])=>{l.has(t)?o[t]=e:console.warn("Unknown prop: %s",t)}),o.update()},o.addUpdateListener(t=>postMessage(t))}});