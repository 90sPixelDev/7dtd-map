(()=>{"use strict";var t={26:(t,e)=>{function r(t){return new Promise((e=>t.requestAnimationFrame(e)))}Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){let s=null,n=null;return async()=>{s=!0,n||(n=(async()=>{for(;s;)s=!1,await e(),await r(t);n=null})())}}},17:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(r(26));function a(t,e){const r=t.all.flatMap((t=>{const r=l(t.name,e);return r?{...t,highlightedName:r}:[]}));return t.status=`${r.length} matched prefabs`,r}function i(t,e){const{all:r,blockPrefabIndex:s,blockLabels:n}=t,a=function(t,e,r){return Object.entries(e).reduce(((e,[s,n])=>{const a=l(s,t),i=r[s],o=i&&l(i,t);return a||o?e.concat({name:s,highlightedName:a||s,highlightedLabel:o||i,prefabs:n}):e}),[])}(e,s,n);if(0===a.length)return t.status="No matched blocks",[];const i=function(t){return t.reduce(((t,e)=>{const{name:r,highlightedName:s,highlightedLabel:n}=e;return e.prefabs.forEach((e=>{const a={name:r,highlightedName:s,highlightedLabel:n,count:e.count};t[e.name]=(t[e.name]||[]).concat(a)})),t}),{})}(a);if(0===Object.keys(i).length)return t.status=`No prefabs, ${a.length} matched blocks`,[];const o=r.flatMap((t=>{const e=i[t.name];return e?{...t,matchedBlocks:e}:[]}));return t.status=`${o.length} prefabs, ${a.length} matched blocks`,o}function l(t,e){let r=!1;const s=t.replace(e,(t=>(r=t.length>0,`<mark>${t}</mark>`)));return r?s:null}e.default=class{constructor(t){this.window=t,this.all=[],this.filtered=[],this.prevFiltered=[],this.filter=null,this.prefabsFilterString="",this.blocksFilterString="",this.markCoords=null,this.blockPrefabIndex={},this.blockLabels={},this.updateListeners=[],this.status="",this.lazyUpdater=n.default(t,(async()=>this.updateImmediately()))}update(){this.lazyUpdater()}updateImmediately(){var t,e;(t=this).filter?t.filtered=t.filter.func(t,t.filter.pattern):(0===t.all.length?t.status="No prefabs":t.status="All prefabs",t.filtered=t.all),(e=this).markCoords?e.filtered.forEach((t=>{const r=(s=t,n=e.markCoords,Math.round(Math.sqrt((s.x-n.x)**2+(s.y-n.z)**2)));var s,n;t.dist=r})):e.filtered.forEach((t=>{t.dist=null})),function(t){t.markCoords?t.filtered.sort(((t,e)=>t.dist>e.dist?1:t.dist<e.dist?-1:0)):t.filtered.sort(((t,e)=>t.name>e.name?1:t.name<e.name?-1:0))}(this);const r={status:this.status};this.prevFiltered===this.filtered&&this.prevMarkCoords===this.markCoords||(r.prefabs=this.filtered,this.prevFiltered=this.filtered,this.prevMarkCoords=this.markCoords),this.updateListeners.forEach((t=>t(r)))}set prefabsFilterString(t){const e=t.trim();0===e.length?this.filter=null:this.filter={name:"prefab name",func:a,pattern:new RegExp(e,"i")}}set blocksFilterString(t){const e=t.trim();0===e.length?this.filter=null:this.filter={name:"block name",func:i,pattern:new RegExp(e,"i")}}addUpdateListener(t){this.updateListeners.push(t)}}},594:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(r(17)),a=new Set(["all","prefabsFilterString","blocksFilterString","markCoords","blockPrefabIndex","blockLabels"]),i=new n.default(self);onmessage=t=>{Object.entries(t.data).forEach((([t,e])=>{a.has(t)?i[t]=e:console.warn("Unknown prop: %s",t)})),i.update()},i.addUpdateListener((t=>postMessage(t)))}},e={};!function r(s){var n=e[s];if(void 0!==n)return n.exports;var a=e[s]={exports:{}};return t[s].call(a.exports,a,a.exports,r),a.exports}(594)})();
//# sourceMappingURL=prefabs-filter.js.map