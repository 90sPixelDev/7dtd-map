{"version":3,"sources":["webpack://7dtd-map/./node_modules/idb/build/esm/wrap-idb-value.js","webpack://7dtd-map/./node_modules/idb/build/esm/index.js","webpack://7dtd-map/./src/index.ts","webpack://7dtd-map/./src/index/cursor-coods-handler.ts","webpack://7dtd-map/./src/index/dnd-handler.ts","webpack://7dtd-map/./src/index/dtm-handler.ts","webpack://7dtd-map/./src/index/file-handler.ts","webpack://7dtd-map/./src/index/generation-info-handler.ts","webpack://7dtd-map/./src/index/loading-handler.ts","webpack://7dtd-map/./src/index/map-canvas-handler.ts","webpack://7dtd-map/./src/index/map-selector.ts","webpack://7dtd-map/./src/index/marker-handler.ts","webpack://7dtd-map/./src/index/prefabs-handler.ts","webpack://7dtd-map/./src/index/sample-world-loader.ts","webpack://7dtd-map/./src/lib/bitmap-loader.ts","webpack://7dtd-map/./src/lib/copy-button.ts","webpack://7dtd-map/./src/lib/delayed-renderer.ts","webpack://7dtd-map/./src/lib/map-storage.ts","webpack://7dtd-map/./src/lib/png-parser.ts","webpack://7dtd-map/./src/lib/preset-button.ts","webpack://7dtd-map/./src/lib/throttled-invoker.ts","webpack://7dtd-map/./src/lib/utils.ts","webpack://7dtd-map/webpack/bootstrap","webpack://7dtd-map/webpack/runtime/define property getters","webpack://7dtd-map/webpack/runtime/hasOwnProperty shorthand","webpack://7dtd-map/webpack/runtime/make namespace object","webpack://7dtd-map/webpack/startup"],"names":["idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","target","prop","receiver","IDBTransaction","get","objectStoreNames","undefined","objectStore","wrap","set","value","has","transformCachableValue","func","IDBDatabase","prototype","transaction","IDBCursor","advance","continue","continuePrimaryKey","includes","args","apply","unwrap","this","storeNames","tx","call","sort","done","Promise","resolve","reject","unlisten","removeEventListener","complete","error","DOMException","addEventListener","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","c","Proxy","IDBRequest","request","promise","success","result","then","catch","promisifyRequest","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","async","storeName","store","index","shift","all","oldTraps","main","presetButton","init","copyButton","loadingHandler","LoadingHandler","indicator","component","disablings","files","HTMLInputElement","select","HTMLSelectElement","create","HTMLButtonElement","delete","mapName","mapStorage","MapStorage","MapSelector","mapCanvasHandler","MapCanvasHandler","canvas","HTMLCanvasElement","biomesAlpha","splat3Alpha","splat4Alpha","radAlpha","signSize","signAlpha","brightness","scale","Worker","generationInfoHandler","GenerationInfoHandler","output","HTMLTextAreaElement","dtmHandler","DtmHandler","prefabsHandler","PrefabsHandler","status","HTMLElement","prefabFilter","blockFilter","listeners","push","prefabs","update","prefabListRenderer","DelayedRenderer","p","prefab","li","document","createElement","innerHTML","dist","humanreadableDistance","highlightedName","x","z","join","matchedBlocks","length","blocksUl","forEach","block","blockLi","count","highlightedLabel","appendChild","prefabLi","iterator","cursorCoodsHandler","CursorCoodsHandler","coords","size","dtm","getElevation","addMapSizeListener","mapSize","markerHandler","MarkerHandler","resetMarker","marker","markerCoords","imageLoader","ImageBitmapLoader","fileHandler","FileHandler","input","addListeners","file","biomesImg","createImageBitmap","splat3Img","loadSplat","splat4Img","radImg","loadRad","handle","DndHandler","addDropFilesListener","pushFiles","SampleWorldLoader","addListenr","f","downloadCanvasPng","readyState","updateCursor","self","doms","textContent","formatCoords","elevationFunction","gameMapSize","width","height","e","passive","doc","dropFilesListeners","dataTransfer","types","preventDefault","Array","from","fn","body","classList","add","dropEffect","clientX","clientY","remove","ln","Dtm","bitmap","data","Math","floor","byteLength","console","warn","storage","workerFactory","pngParser","PngParser","addListener","h","getCurrent","blobOrUrl","loadDtmByPngUrl","type","toLocaleLowerCase","loadByPngBlob","Error","blob","src","Uint8Array","arrayBuffer","i","loadDtmByRaw","put","url","res","fetch","png","pngData","convertPng","parse","throttledProcess","throttledInvoker","processFiles","arr","n","fileName","listener","old","concat","filtered","filter","getListeners","updateFiles","dispatchEvent","Event","map","popFile","File","log","shouldSkip","time","timeEnd","waitAnimationFrame","entries","flatMap","pattern","RegExp","test","slice","dt","DataTransfer","items","generationInfoOrBlob","generationInfo","text","worldName","exec","trim","extractWorldName","ANIMATION_FRAMES","_loadingList","list","startAnimation","loading","s","isDisable","Object","values","disabled","disableAll","bar","Date","now","FIELDNAME_STORAGENAME_MAP","isTransferable","v","ImageBitmap","OffscreenCanvas","worker","mapSizeListeners","transferControlToOffscreen","currentId","msg","shouldStore","entry","imageBitmapToPngBlob","transferables","postMessage","valueAsNumber","buildOptionElement","dataset","mapId","requireNonnull","id","toString","initPromise","selectedOptions","parseInt","selectedOption","buildOptions","changeMap","selectedOptionMapId","deleteMap","maps","listMaps","df","DocumentFragment","m","removeAllChildren","selectOptionByMapId","createMap","options","removeChild","isInit","selectedIndex","findIndex","o","isDisabled","d","updateMarker","canvasEventToGameCoords","eventName","prefabsFilterString","activeFilter","blocksFilterString","xml","dom","DOMParser","parseFromString","getElementsByTagName","position","getAttribute","split","markCoords","SAMPLE_WORLD_FILES","button","querySelectorAll","loadSampleWorld","dir","sampleDir","uri","path","substring","lastIndexOf","fetchAsFile","render","copyFunction","context","getContext","imageData","getImageData","putImageData","indata","out","copy","selection","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","selectNode","commandResult","execCommand","message","successMessage","failureMessage","getElementById","copyFor","renderUntil","stopPredicate","_iterator","next","isReturn","itemRenderer","appendee","r","Boolean","scrollableWrapper","Symbol","scrollCallback","renderAll","contains","iteratorOrIterable","origin","chunkSize","returnResult","chunkIter","chunk","throw","return","treturn","chunkIterator","requestAnimationFrame","once","isFill","wrapper","offsetHeight","scrollHeight","dbUpgrade","createObjectStore","keyPath","autoIncrement","LARGE_OBJECT_TYPES","CHANGE_LISTENERS","isLargeObjectType","getAll","newMap","getDb","DEFAULT_WORLD_NAME","mapIdOrUndefined","t","_db","onmessage","onerror","onmessageerror","terminate","inputFor","inputText","asyncFunc","workerPromises","prev","requireType","gameCoords","canvasSize","gx","offsetX","gz","offsetY","round","lastChild","toFixed","elevation","y","a","download","href","toDataURL","click","img","drawImage","convertToBlob","msec","setTimeout","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","key","defineProperty","enumerable","obj","hasOwnProperty","toStringTag"],"mappings":"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","file":"index.js","sourcesContent":["const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { ImageBitmapLoader } from \"./lib/bitmap-loader\";\nimport * as copyButton from \"./lib/copy-button\";\nimport * as presetButton from \"./lib/preset-button\";\nimport { MapSelector } from \"./index/map-selector\";\nimport { MapStorage } from \"./lib/map-storage\";\nimport { component, downloadCanvasPng, humanreadableDistance } from \"./lib/utils\";\nimport { GenerationInfoHandler } from \"./index/generation-info-handler\";\nimport { DtmHandler } from \"./index/dtm-handler\";\nimport { PrefabsHandler } from \"./index/prefabs-handler\";\nimport { DelayedRenderer } from \"./lib/delayed-renderer\";\nimport { CursorCoodsHandler } from \"./index/cursor-coods-handler\";\nimport { MarkerHandler } from \"./index/marker-handler\";\nimport { FileHandler } from \"./index/file-handler\";\nimport { MapCanvasHandler } from \"./index/map-canvas-handler\";\nimport { DndHandler } from \"./index/dnd-handler\";\nimport { SampleWorldLoader } from \"./index/sample-world-loader\";\nimport { LoadingHandler } from \"./index/loading-handler\";\n\nfunction main() {\n  presetButton.init();\n  copyButton.init();\n\n  const loadingHandler = new LoadingHandler({\n    indicator: component(\"loading_indicator\"),\n    disablings: {\n      files: component(\"files\", HTMLInputElement),\n      select: component(\"map_list\", HTMLSelectElement),\n      create: component(\"create_map\", HTMLButtonElement),\n      delete: component(\"delete_map\", HTMLButtonElement),\n      mapName: component(\"map_name\", HTMLInputElement),\n    },\n  });\n\n  const mapStorage = new MapStorage();\n  new MapSelector(\n    {\n      select: component(\"map_list\", HTMLSelectElement),\n      create: component(\"create_map\", HTMLButtonElement),\n      delete: component(\"delete_map\", HTMLButtonElement),\n      mapName: component(\"map_name\", HTMLInputElement),\n    },\n    mapStorage\n  );\n\n  const mapCanvasHandler = new MapCanvasHandler(\n    {\n      canvas: component(\"map\", HTMLCanvasElement),\n      biomesAlpha: component(\"biomes_alpha\", HTMLInputElement),\n      splat3Alpha: component(\"splat3_alpha\", HTMLInputElement),\n      splat4Alpha: component(\"splat4_alpha\", HTMLInputElement),\n      radAlpha: component(\"rad_alpha\", HTMLInputElement),\n      signSize: component(\"sign_size\", HTMLInputElement),\n      signAlpha: component(\"sign_alpha\", HTMLInputElement),\n      brightness: component(\"brightness\", HTMLInputElement),\n      scale: component(\"scale\", HTMLInputElement),\n    },\n    new Worker(\"worker/map-renderer.js\"),\n    mapStorage,\n    loadingHandler\n  );\n\n  const generationInfoHandler = new GenerationInfoHandler(\n    {\n      mapName: component(\"map_name\", HTMLInputElement),\n      output: component(\"generation_info_output\", HTMLTextAreaElement),\n    },\n    mapStorage\n  );\n\n  const dtmHandler = new DtmHandler(mapStorage, () => new Worker(\"worker/pngjs.js\"));\n\n  const prefabsHandler = new PrefabsHandler(\n    {\n      status: component(\"prefabs_num\", HTMLElement),\n      prefabFilter: component(\"prefabs_filter\", HTMLInputElement),\n      blockFilter: component(\"blocks_filter\", HTMLInputElement),\n    },\n    new Worker(\"worker/prefabs-filter.js\"),\n    mapStorage\n  );\n  prefabsHandler.listeners.push(async (prefabs) => {\n    mapCanvasHandler.update({ prefabs });\n  });\n\n  const prefabListRenderer = new DelayedRenderer<HighlightedPrefab>(\n    component(\"controller\", HTMLElement),\n    component(\"prefabs_list\", HTMLElement),\n    (p) => prefabLi(p)\n  );\n  prefabsHandler.listeners.push(async (prefabs) => {\n    prefabListRenderer.iterator = prefabs;\n  });\n\n  const cursorCoodsHandler = new CursorCoodsHandler(\n    {\n      canvas: component(\"map\", HTMLCanvasElement),\n      output: component(\"cursor_coods\", HTMLElement),\n    },\n    (coords, size) => dtmHandler.dtm?.getElevation(coords, size) ?? null\n  );\n  mapCanvasHandler.addMapSizeListener((size) => (cursorCoodsHandler.mapSize = size));\n\n  const markerHandler = new MarkerHandler(\n    {\n      canvas: component(\"map\", HTMLCanvasElement),\n      output: component(\"mark_coods\", HTMLElement),\n      resetMarker: component(\"reset_mark\", HTMLButtonElement),\n    },\n    (coords, size) => dtmHandler.dtm?.getElevation(coords, size) ?? null\n  );\n  mapCanvasHandler.addMapSizeListener((size) => (markerHandler.mapSize = size));\n  markerHandler.listeners.push(async (coords) => {\n    prefabsHandler.marker = coords;\n    mapCanvasHandler.update({ markerCoords: coords });\n  });\n\n  const imageLoader = new ImageBitmapLoader(() => new Worker(\"worker/pngjs.js\"));\n  const fileHandler = new FileHandler({ input: component(\"files\", HTMLInputElement) }, loadingHandler);\n  fileHandler.addListeners([\n    [\"biomes.png\", async (file) => mapCanvasHandler.update({ biomesImg: await createImageBitmap(file) })],\n    [/splat3(_processed)?\\.png/, async (file) => mapCanvasHandler.update({ splat3Img: await imageLoader.loadSplat(file) })],\n    [\"splat4_processed.png\", async (file) => mapCanvasHandler.update({ splat4Img: await imageLoader.loadSplat(file) })],\n    [\"radiation.png\", async (file) => mapCanvasHandler.update({ radImg: await imageLoader.loadRad(file) })],\n    [\"prefabs.xml\", async (file) => await prefabsHandler.handle(file)],\n    [/dtm\\.(raw|png)/, async (file) => await dtmHandler.handle(file)],\n    [\"GenerationInfo.txt\", async (file) => await generationInfoHandler.handle(file)],\n  ]);\n\n  const dndHandler = new DndHandler(document);\n  dndHandler.addDropFilesListener((files) => fileHandler.pushFiles(files));\n\n  const sampleWorldLoader = new SampleWorldLoader();\n  sampleWorldLoader.addListenr((f) => fileHandler.pushFiles([f]));\n\n  component(\"download\").addEventListener(\"click\", () => {\n    const mapName = component(\"map_name\", HTMLInputElement).value ?? \"7dtd-map\";\n    downloadCanvasPng(`${mapName}.png`, component(\"map\", HTMLCanvasElement));\n  });\n}\n\nfunction prefabLi(prefab: HighlightedPrefab) {\n  const li = document.createElement(\"li\");\n  li.innerHTML = [\n    `<button data-input-for=\"prefabs_filter\" data-input-text=\"${prefab.name}\" title=\"Filter with this prefab name\">▲</button>`,\n    prefab.dist ? `${humanreadableDistance(prefab.dist)},` : \"\",\n    `<a href=\"prefabs/${prefab.name}.html\" target=\"_blank\">${prefab.highlightedName || prefab.name}</a>`,\n    `(${prefab.x}, ${prefab.z})`,\n  ].join(\" \");\n  if (prefab.matchedBlocks && prefab.matchedBlocks.length > 0) {\n    const blocksUl = document.createElement(\"ul\");\n    prefab.matchedBlocks.forEach((block) => {\n      const blockLi = document.createElement(\"li\");\n      blockLi.innerHTML = [\n        `<button data-input-for=\"blocks_filter\" data-input-text=\"${block.name}\" title=\"Filter with this block name\">▲</button>`,\n        `${block.count}x`,\n        block.highlightedLabel,\n        `<small>${block.highlightedName}</small>`,\n      ].join(\" \");\n      blocksUl.appendChild(blockLi);\n    });\n    li.appendChild(blocksUl);\n  }\n  return li;\n}\n\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", main);\n} else {\n  main();\n}\n","import { formatCoords, gameMapSize } from \"../lib/utils\";\n\ninterface Doms {\n  canvas: HTMLCanvasElement;\n  output: HTMLElement;\n}\n\nexport class CursorCoodsHandler {\n  mapSize: GameMapSize = gameMapSize({ width: 0, height: 0 });\n  elevationFunction: (coods: GameCoords, mapSize: GameMapSize) => number | null;\n  doms: Doms;\n\n  constructor(doms: Doms, elevationFunction: (coords: GameCoords, mapSize: GameMapSize) => number | null) {\n    this.elevationFunction = elevationFunction;\n    this.doms = doms;\n\n    doms.canvas.addEventListener(\"mousemove\", (e) => updateCursor(this, e), { passive: true });\n    doms.canvas.addEventListener(\"mouseout\", () => updateCursor(this));\n  }\n}\n\nfunction updateCursor(self: CursorCoodsHandler, event: MouseEvent | null = null) {\n  self.doms.output.textContent = formatCoords(self.mapSize, self.doms.canvas, self.elevationFunction, event);\n}\n","export class DndHandler {\n  private dropFilesListeners: ((files: File[]) => Promise<unknown> | unknown)[] = [];\n\n  constructor(doc: Document) {\n    doc.addEventListener(\"drop\", async (event) => {\n      if (!event.dataTransfer?.types.includes(\"Files\")) {\n        return;\n      }\n      event.preventDefault();\n      const files = Array.from(event.dataTransfer.files);\n      this.dropFilesListeners.forEach((fn) => fn(files));\n    });\n\n    doc.addEventListener(\"dragenter\", (event) => {\n      if (!event.dataTransfer?.types.includes(\"Files\")) {\n        return;\n      }\n      event.preventDefault();\n      doc.body.classList.add(\"dragovered\");\n    });\n    doc.addEventListener(\"dragover\", (event) => {\n      if (!event.dataTransfer?.types.includes(\"Files\")) {\n        return;\n      }\n      event.preventDefault();\n      event.dataTransfer.dropEffect = \"copy\";\n      doc.body.classList.add(\"dragovered\");\n    });\n    doc.addEventListener(\"dragleave\", (event) => {\n      // \"dragleave\" events raise even if the cursor moved on child nodes.\n      // To avoid this case, we should check cursor positions.\n      // Those are zero if the cursor moved out from the browser window.\n      if (event.clientX !== 0 || event.clientY !== 0) {\n        return;\n      }\n      event.preventDefault();\n      doc.body.classList.remove(\"dragovered\");\n    });\n    doc.addEventListener(\"drop\", async (event) => {\n      if (!event.dataTransfer?.types.includes(\"Files\")) {\n        return;\n      }\n      event.preventDefault();\n      doc.body.classList.remove(\"dragovered\");\n    });\n  }\n\n  addDropFilesListener(ln: (files: File[]) => Promise<unknown> | unknown): void {\n    this.dropFilesListeners.push(ln);\n  }\n}\n","import { MapStorage } from \"../lib/map-storage\";\nimport { Png, PngParser } from \"../lib/png-parser\";\n\nexport class Dtm {\n  data: Uint8Array;\n\n  constructor(bitmap: Uint8Array) {\n    this.data = bitmap;\n  }\n\n  getElevation(coords: GameCoords, size: GameMapSize): number {\n    if (Math.floor(this.data.byteLength / size.width) !== size.height) {\n      console.warn(\"Game map size does not match with DTM byte array length: inputMapSize=%o, byteLength=%d\", size, this.data.byteLength);\n    }\n    // In-game coords with left-top offset\n    const x = Math.floor(size.width / 2) + coords.x;\n    const z = Math.floor(size.height / 2) - coords.z;\n    return this.data[x + z * size.width];\n  }\n}\n\nexport class DtmHandler {\n  private storage: MapStorage;\n  private pngParser: PngParser;\n\n  dtm: Dtm | null = null;\n\n  constructor(storage: MapStorage, workerFactory: () => Worker) {\n    this.storage = storage;\n    this.pngParser = new PngParser(workerFactory);\n    MapStorage.addListener(async () => {\n      const h = await storage.getCurrent(\"elevations\");\n      if (h) {\n        this.dtm = new Dtm(h.data);\n      } else {\n        this.dtm = null;\n      }\n    });\n  }\n\n  async handle(blobOrUrl: File | string): Promise<void> {\n    if (typeof blobOrUrl === \"string\") {\n      this.dtm = await this.loadDtmByPngUrl(blobOrUrl);\n    } else if (blobOrUrl.type.toLocaleLowerCase() === \"image/png\") {\n      this.dtm = await this.loadByPngBlob(blobOrUrl);\n    } else if (blobOrUrl.type.toLocaleLowerCase() === \"image/raw\") {\n      this.dtm = await loadDtmByRaw(blobOrUrl);\n    } else {\n      throw Error(`Unknown data type: name=${blobOrUrl.name}, type=${blobOrUrl.type}`);\n    }\n    this.storage.put(\"elevations\", this.dtm.data);\n  }\n\n  private async loadDtmByPngUrl(url: string): Promise<Dtm> {\n    const res = await fetch(url);\n    return this.loadByPngBlob(await res.blob());\n  }\n\n  private async loadByPngBlob(blob: Blob): Promise<Dtm> {\n    return convertPng(await this.pngParser.parse(blob));\n  }\n}\n\nfunction convertPng(png: Png) {\n  const pngData = new Uint8Array(png.data);\n  const data = new Uint8Array(pngData.length / 4);\n  for (let i = 0; i < data.length; i++) {\n    data[i] = pngData[i * 4];\n  }\n  return new Dtm(data);\n}\n\nasync function loadDtmByRaw(blob: Blob): Promise<Dtm> {\n  const src = new Uint8Array(await blob.arrayBuffer());\n  const data = new Uint8Array(src.length / 2);\n  for (let i = 0; i < data.length; i++) {\n    // Higher 8 bits are a sub height in a block\n    // Lower 8 bits are a height\n    data[i] = src[i * 2 + 1];\n  }\n  return new Dtm(data);\n}\n","import { throttledInvoker } from \"../lib/throttled-invoker\";\nimport { waitAnimationFrame } from \"../lib/utils\";\nimport { LoadingHandler } from \"./loading-handler\";\n\ninterface Doms {\n  input: HTMLInputElement;\n}\n\ntype Listener = (file: File) => Promise<unknown> | unknown;\n\nexport class FileHandler {\n  private doms: Doms;\n  private listeners: Map<RegExp | string, Listener[]> = new Map();\n  loadingHandler: LoadingHandler;\n\n  constructor(doms: Doms, loadingHandler: LoadingHandler) {\n    this.doms = doms;\n    this.loadingHandler = loadingHandler;\n\n    const throttledProcess = throttledInvoker(() => this.processFiles());\n    doms.input.addEventListener(\"input\", throttledProcess);\n  }\n\n  addListeners(arr: [RegExp | string, Listener | Listener[]][]): void {\n    arr.forEach(([n, ln]) => this.addListener(n, ln));\n  }\n\n  addListener(fileName: RegExp | string, listener: Listener | Listener[]): void {\n    const old = this.listeners.get(fileName) ?? [];\n    this.listeners.set(fileName, old.concat(listener));\n  }\n\n  pushFiles(files: File[]): void {\n    const filtered = files.filter((file) => this.getListeners(file.name).length !== 0);\n    this.updateFiles([...Array.from(this.doms.input.files ?? []), ...filtered]);\n    this.doms.input.dispatchEvent(new Event(\"input\"));\n  }\n\n  private async processFiles() {\n    this.loadingHandler.add(Array.from(this.doms.input.files ?? []).map((f) => f.name));\n    let file = this.popFile();\n    while (file instanceof File) {\n      const listeners = this.getListeners(file.name);\n      if (listeners.length === 0) {\n        console.log(\"No hundler: \", file);\n      } else if (this.shouldSkip(file)) {\n        console.log(\"Skip: \", file);\n      } else {\n        console.time(`Processed: ${file.name}`);\n        await Promise.all(listeners.map(async (fn) => fn(file as File)));\n        console.timeEnd(`Processed: ${file.name}`);\n      }\n      this.loadingHandler.delete(file.name);\n      await waitAnimationFrame();\n      file = this.popFile();\n    }\n  }\n\n  private getListeners(fileName: string) {\n    return Array.from(this.listeners.entries()).flatMap(([pattern, listeners]) => {\n      if (pattern instanceof RegExp && pattern.test(fileName)) return listeners;\n      if (typeof pattern === \"string\" && pattern === fileName) return listeners;\n      return [];\n    });\n  }\n\n  private popFile(): File | null {\n    if (!this.doms.input.files?.length) return null;\n    const files = Array.from(this.doms.input.files);\n    this.updateFiles(files.slice(1));\n    return files[0];\n  }\n\n  private shouldSkip(file: File): boolean {\n    if (file.name === \"splat3.png\") {\n      return Array.from(this.doms.input.files ?? [])\n        .map((f) => f.name)\n        .includes(\"splat3_processed.png\");\n    }\n    return false;\n  }\n\n  private updateFiles(files: File[]) {\n    this.doms.input.files = dataTransfer(files).files;\n  }\n}\n\nfunction dataTransfer(files: File[]): DataTransfer {\n  const dt = new DataTransfer();\n  for (const f of files) dt.items.add(f);\n  return dt;\n}\n","import { MapStorage } from \"../lib/map-storage\";\n\ninterface Doms {\n  mapName: HTMLInputElement;\n  output: HTMLTextAreaElement;\n}\n\ntype BlobLike = { text: () => Promise<string> };\n\nexport class GenerationInfoHandler {\n  doms: Doms;\n  storage: MapStorage;\n\n  constructor(doms: Doms, storage: MapStorage) {\n    this.doms = doms;\n    this.storage = storage;\n\n    MapStorage.addListener(async () => {\n      const i = await storage.getCurrent(\"generationInfo\");\n      doms.output.value = i?.data ?? \"\";\n    });\n  }\n\n  async handle(generationInfoOrBlob: string | BlobLike): Promise<void> {\n    let generationInfo;\n    if (typeof generationInfoOrBlob === \"string\") {\n      generationInfo = generationInfoOrBlob;\n    } else {\n      generationInfo = await generationInfoOrBlob.text();\n    }\n\n    const worldName = extractWorldName(generationInfo);\n    if (worldName) {\n      this.doms.mapName.value = worldName;\n      this.doms.mapName.dispatchEvent(new Event(\"input\"));\n    }\n\n    this.doms.output.value = generationInfo;\n    this.doms.mapName.dispatchEvent(new Event(\"input\"));\n\n    this.storage.put(\"generationInfo\", generationInfo);\n  }\n}\n\nfunction extractWorldName(generationInfo: string) {\n  return /^World Name:(.*)$/m.exec(generationInfo)?.[1].trim();\n}\n","import { waitAnimationFrame } from \"../lib/utils\";\n\ninterface Doms {\n  indicator: HTMLElement;\n  disablings: {\n    files: HTMLInputElement;\n    select: HTMLSelectElement;\n    create: HTMLButtonElement;\n    delete: HTMLButtonElement;\n    mapName: HTMLInputElement;\n  };\n}\n\nconst ANIMATION_FRAMES = [\"｜\", \"／\", \"―\", \"＼\"];\nconst ANIMATION_INTERVAL_MSEC = 1000;\n\n// Loading progression maanger\nexport class LoadingHandler {\n  private doms: Doms;\n  private _loadingList: string[] = [];\n\n  constructor(doms: Doms) {\n    this.doms = doms;\n  }\n\n  add(list: string[] | string): void {\n    this._loadingList = this._loadingList.concat(list);\n    this.startAnimation();\n  }\n\n  delete(loading: string): void {\n    this._loadingList = this._loadingList.filter((s) => s !== loading);\n  }\n\n  private disableAll(isDisable: boolean) {\n    Object.values(this.doms.disablings).forEach((e) => (e.disabled = isDisable));\n  }\n\n  private async startAnimation() {\n    this.disableAll(true);\n    while (this._loadingList.length !== 0) {\n      this.doms.indicator.textContent = `${this.bar()} Loading: ${this._loadingList.join(\", \")}`;\n      await waitAnimationFrame();\n    }\n    this.doms.indicator.textContent = \"\";\n    this.disableAll(false);\n  }\n\n  private bar() {\n    return ANIMATION_FRAMES[Math.floor(Date.now() / ANIMATION_INTERVAL_MSEC) % ANIMATION_FRAMES.length];\n  }\n}\n","import { MapStorage } from \"../lib/map-storage\";\nimport { imageBitmapToPngBlob } from \"../lib/utils\";\nimport * as mapRenderer from \"../worker/map-renderer\";\nimport { LoadingHandler } from \"./loading-handler\";\n\nconst FIELDNAME_STORAGENAME_MAP = {\n  biomesImg: \"biomes\",\n  splat3Img: \"splat3\",\n  splat4Img: \"splat4\",\n  radImg: \"rad\",\n} as const;\n\ninterface Doms {\n  canvas: HTMLCanvasElement;\n  biomesAlpha: HTMLInputElement;\n  splat3Alpha: HTMLInputElement;\n  splat4Alpha: HTMLInputElement;\n  radAlpha: HTMLInputElement;\n  signSize: HTMLInputElement;\n  signAlpha: HTMLInputElement;\n  brightness: HTMLInputElement;\n  scale: HTMLInputElement;\n}\n\nexport class MapCanvasHandler {\n  private doms: Doms;\n  private worker: Worker;\n  private storage: MapStorage;\n  private mapSizeListeners: ((mapSize: GameMapSize) => Promise<unknown> | unknown)[] = [];\n\n  constructor(doms: Doms, worker: Worker, storage: MapStorage, loadingHandler: LoadingHandler) {\n    this.doms = doms;\n    this.worker = worker;\n    this.storage = storage;\n\n    this.update({\n      canvas: doms.canvas.transferControlToOffscreen(),\n      ...this.biomesAlpha(),\n      ...this.splat3Alpha(),\n      ...this.splat4Alpha(),\n      ...this.radAlpha(),\n      ...this.brightness(),\n      ...this.signSize(),\n      ...this.signAlpha(),\n      ...this.scale(),\n    });\n\n    MapStorage.addListener(async () => {\n      console.log(\"Change map: \", await storage.currentId());\n      this.update({ biomesImg: null, splat3Img: null, splat4Img: null, radImg: null }, false);\n      loadingHandler.add([\"bioms\", \"splat3\", \"splat4\", \"radiation\"]);\n      this.update({ biomesImg: (await storage.getCurrent(\"biomes\"))?.data }, false);\n      loadingHandler.delete(\"bioms\");\n      this.update({ splat3Img: (await storage.getCurrent(\"splat3\"))?.data }, false);\n      loadingHandler.delete(\"splat3\");\n      this.update({ splat4Img: (await storage.getCurrent(\"splat4\"))?.data }, false);\n      loadingHandler.delete(\"splat4\");\n      this.update({ radImg: (await storage.getCurrent(\"rad\"))?.data }, false);\n      loadingHandler.delete(\"radiation\");\n    });\n\n    worker.addEventListener(\"message\", (e: MessageEvent<mapRenderer.OutMessage>) => {\n      const { mapSize } = e.data;\n      this.mapSizeListeners.map((fn) => fn(mapSize));\n    });\n    doms.biomesAlpha.addEventListener(\"input\", () => this.update(this.biomesAlpha()));\n    doms.splat3Alpha.addEventListener(\"input\", () => this.update(this.splat3Alpha()));\n    doms.splat4Alpha.addEventListener(\"input\", () => this.update(this.splat4Alpha()));\n    doms.radAlpha.addEventListener(\"input\", () => this.update(this.radAlpha()));\n    doms.signSize.addEventListener(\"input\", () => this.update(this.signSize()));\n    doms.signAlpha.addEventListener(\"input\", () => this.update(this.signAlpha()));\n    doms.brightness.addEventListener(\"input\", () => this.update(this.brightness()));\n    doms.scale.addEventListener(\"input\", () => this.update(this.scale()));\n  }\n\n  async update(msg: mapRenderer.InMessage, shouldStore = true): Promise<void> {\n    if (shouldStore) {\n      for (const entry of Object.entries(msg)) {\n        if (isStoreTarget(entry)) {\n          this.storage.put(FIELDNAME_STORAGENAME_MAP[entry[0]], await imageBitmapToPngBlob(entry[1]));\n        }\n      }\n    }\n    const transferables = Object.values(msg).filter(isTransferable);\n    this.worker.postMessage(msg, transferables);\n  }\n\n  addMapSizeListener(ln: (mapSize: GameMapSize) => Promise<unknown> | unknown): void {\n    this.mapSizeListeners.push(ln);\n  }\n\n  private biomesAlpha() {\n    return { biomesAlpha: this.doms.biomesAlpha.valueAsNumber };\n  }\n  private splat3Alpha() {\n    return { splat3Alpha: this.doms.splat3Alpha.valueAsNumber };\n  }\n  private splat4Alpha() {\n    return { splat4Alpha: this.doms.splat4Alpha.valueAsNumber };\n  }\n  private radAlpha() {\n    return { radAlpha: this.doms.radAlpha.valueAsNumber };\n  }\n  private signSize() {\n    return { signSize: this.doms.signSize.valueAsNumber };\n  }\n  private signAlpha() {\n    return { signAlpha: this.doms.signAlpha.valueAsNumber };\n  }\n  private brightness() {\n    return { brightness: `${this.doms.brightness.valueAsNumber}%` };\n  }\n  private scale() {\n    return { scale: this.doms.scale.valueAsNumber };\n  }\n}\n\nfunction isTransferable(v: unknown): v is ImageBitmap | OffscreenCanvas {\n  return v instanceof ImageBitmap || v instanceof OffscreenCanvas;\n}\n\nfunction isStoreTarget(e: Entry<mapRenderer.InMessage>): e is [keyof typeof FIELDNAME_STORAGENAME_MAP, ImageBitmap] {\n  return e[0] in FIELDNAME_STORAGENAME_MAP;\n}\n","import { MapObject, MapStorage } from \"../lib/map-storage\";\nimport { removeAllChildren, requireNonnull } from \"../lib/utils\";\n\ntype Doms = {\n  select: HTMLSelectElement;\n  create: HTMLButtonElement;\n  delete: HTMLButtonElement;\n  mapName: HTMLInputElement;\n};\n\nexport class MapSelector {\n  private storage: MapStorage;\n  private doms: Doms;\n  private initPromise: Promise<void>;\n\n  constructor(doms: Doms, storage: MapStorage) {\n    this.doms = doms;\n    this.storage = storage;\n    this.initPromise = this.init();\n  }\n\n  private get selectedOption() {\n    return requireNonnull(this.doms.select.selectedOptions)[0];\n  }\n\n  private get selectedOptionMapId() {\n    return parseInt(this.selectedOption.dataset.mapId as string);\n  }\n\n  private async init(): Promise<void> {\n    MapStorage.addListener(async (mapId) => this.buildOptions(mapId));\n    await this.changeMap(await this.storage.currentId(), true);\n\n    this.doms.mapName.addEventListener(\"input\", () => {\n      const mapId = this.selectedOptionMapId;\n      const name = this.doms.mapName.value;\n      this.doms.select.selectedOptions[0].textContent = `${mapId}. ${name}`;\n      this.storage.put(\"maps\", name);\n    });\n    this.doms.select.addEventListener(\"input\", () => this.changeMap(this.selectedOptionMapId));\n    this.doms.create.addEventListener(\"click\", () => this.create());\n    this.doms.delete.addEventListener(\"click\", () => this.deleteMap());\n  }\n\n  private async buildOptions(mapId: number) {\n    const maps = await this.storage.listMaps();\n    const df = new DocumentFragment();\n    for (const m of maps) df.appendChild(buildOptionElement(m));\n    removeAllChildren(this.doms.select);\n    this.doms.select.appendChild(df);\n    this.selectOptionByMapId(mapId);\n  }\n\n  private async create() {\n    this.doms.create.disabled = true;\n    console.log(\"Create Map\");\n    const map = await this.storage.createMap();\n    this.doms.select.appendChild(buildOptionElement(map));\n    await this.changeMap(map.id);\n    this.doms.create.disabled = false;\n  }\n\n  private async deleteMap() {\n    this.doms.delete.disabled = true;\n    const mapId = this.selectedOptionMapId;\n\n    console.log(\"Delete Map\", mapId);\n    if (this.doms.select.options.length <= 1) {\n      console.log(\"Reject delete\");\n      return;\n    }\n\n    this.doms.select.removeChild(this.selectedOption);\n    await this.storage.deleteMap(mapId);\n    await this.changeMap(this.selectedOptionMapId);\n    this.doms.delete.disabled = this.doms.select.options.length <= 1;\n  }\n\n  private async changeMap(mapId: number, isInit = false) {\n    if (!isInit) await this.initPromise;\n    console.time(\"Change map\");\n    await this.storage.changeMap(mapId);\n    console.timeEnd(\"Change map\");\n    const map = requireNonnull(await this.storage.getCurrent(\"maps\"));\n    this.selectOptionByMapId(map.id);\n    this.doms.mapName.value = map.name;\n  }\n\n  private selectOptionByMapId(mapId: number) {\n    this.doms.select.selectedIndex = Array.from(this.doms.select.options).findIndex((o) => parseInt(o.dataset.mapId as string) === mapId);\n  }\n\n  private disableDoms(isDisabled: boolean) {\n    Object.values(this.doms).forEach((d) => (d.disabled = isDisabled));\n  }\n}\n\nfunction buildOptionElement(map: MapObject) {\n  const e = document.createElement(\"option\");\n  e.dataset.mapId = requireNonnull(map.id).toString();\n  e.textContent = `${map.id}. ${map.name}`;\n  return e;\n}\n","import { canvasEventToGameCoords, formatCoords, gameMapSize } from \"../lib/utils\";\n\ninterface Doms {\n  canvas: HTMLCanvasElement;\n  output: HTMLElement;\n  resetMarker: HTMLButtonElement;\n}\n\nexport class MarkerHandler {\n  mapSize: GameMapSize = gameMapSize({ width: 0, height: 0 });\n  elevationFunction: (coods: GameCoords, size: GameMapSize) => number | null;\n  doms: Doms;\n  listeners: ((c: GameCoords | null) => Promise<void>)[] = [];\n\n  constructor(doms: Doms, elevationFunction: (coords: GameCoords, width: GameMapSize) => number | null) {\n    this.elevationFunction = elevationFunction;\n    this.doms = doms;\n\n    doms.canvas.addEventListener(\"click\", (e) => {\n      updateMarker(this, e);\n      this.listeners.forEach((fn) => fn(canvasEventToGameCoords(e, this.mapSize, doms.canvas)));\n    });\n    doms.resetMarker.addEventListener(\"click\", () => {\n      updateMarker(this);\n      this.listeners.forEach((fn) => fn(null));\n    });\n  }\n}\n\nfunction updateMarker(self: MarkerHandler, event: MouseEvent | null = null) {\n  self.doms.output.textContent = formatCoords(self.mapSize, self.doms.canvas, self.elevationFunction, event);\n}\n","import * as prefabsFilter from \"../worker/prefabs-filter\";\nimport { MapStorage } from \"../lib/map-storage\";\nimport { PrefabUpdate } from \"../lib/prefabs\";\n\ninterface Doms {\n  status: HTMLElement;\n  prefabFilter: HTMLInputElement;\n  blockFilter: HTMLInputElement;\n}\n\ndeclare class PrefabsFilterWorker extends Worker {\n  postMessage(message: prefabsFilter.InMessage): void;\n}\n\nexport class PrefabsHandler {\n  doms: Doms;\n  worker: PrefabsFilterWorker;\n  storage: MapStorage;\n  listeners: ((prefabs: HighlightedPrefab[]) => Promise<void>)[] = [];\n\n  constructor(doms: Doms, worker: PrefabsFilterWorker, storage: MapStorage) {\n    this.doms = doms;\n    this.worker = worker;\n    this.storage = storage;\n\n    MapStorage.addListener(async () => {\n      const o = await storage.getCurrent(\"prefabs\");\n      worker.postMessage({ all: o?.data ?? [] });\n    });\n    worker.addEventListener(\"message\", (event: MessageEvent<PrefabUpdate>) => {\n      const { prefabs, status } = event.data;\n      this.listeners.map((fn) => fn(prefabs));\n      doms.status.textContent = status;\n    });\n    [\"input\", \"focus\"].forEach((eventName) => {\n      doms.prefabFilter.addEventListener(eventName, async () => {\n        worker.postMessage({ prefabsFilterString: doms.prefabFilter.value });\n        document.body.dataset.activeFilter = \"prefab\";\n      });\n      doms.blockFilter.addEventListener(eventName, async () => {\n        worker.postMessage({ blocksFilterString: doms.blockFilter.value });\n        document.body.dataset.activeFilter = \"block\";\n      });\n    });\n  }\n\n  async handle(blob: { text(): Promise<string> }): Promise<void> {\n    const prefabs = parse(await blob.text());\n    await this.storage.put(\"prefabs\", prefabs);\n    this.worker.postMessage({ all: prefabs });\n  }\n\n  set marker(markCoords: GameCoords | null) {\n    this.worker.postMessage({ markCoords });\n  }\n}\n\nfunction parse(xml: string): Prefab[] {\n  const dom = new DOMParser().parseFromString(xml, \"text/xml\");\n  return Array.from(dom.getElementsByTagName(\"decoration\")).flatMap((e) => {\n    const position = e.getAttribute(\"position\")?.split(\",\");\n    if (!position || position.length !== 3) return [];\n    const name = e.getAttribute(\"name\");\n    if (!name) return [];\n    return {\n      name,\n      x: parseInt(position[0]),\n      z: parseInt(position[2]),\n    };\n  });\n}\n","import { requireNonnull } from \"../lib/utils\";\n\nconst SAMPLE_WORLD_FILES = [\n  \"biomes.png\",\n  \"splat3_processed.png\",\n  \"splat4_processed.png\",\n  \"radiation.png\",\n  \"prefabs.xml\",\n  \"dtm.png\",\n  \"GenerationInfo.txt\",\n];\n\nexport class SampleWorldLoader {\n  private listeners: ((file: File) => Promise<unknown> | unknown)[] = [];\n\n  constructor() {\n    for (const button of Array.from(document.querySelectorAll(\"button[data-sample-dir]\"))) {\n      console.log(\"Sample world button: \", button);\n      if (button instanceof HTMLButtonElement) button.addEventListener(\"click\", async () => this.loadSampleWorld(button));\n    }\n  }\n\n  addListenr(fn: (file: File) => Promise<unknown> | unknown): void {\n    this.listeners.push(fn);\n  }\n\n  private async loadSampleWorld(button: HTMLButtonElement) {\n    button.disabled = true;\n    const dir = requireNonnull(button.dataset.sampleDir);\n    await Promise.all(\n      SAMPLE_WORLD_FILES.flatMap(async (name) => {\n        const file = await fetchAsFile(`${dir}/${name}`);\n        return this.listeners.map((fn) => fn(file));\n      })\n    );\n    button.disabled = false;\n  }\n}\n\nasync function fetchAsFile(uri: string): Promise<File> {\n  console.time(`fetchAsFile: ${uri}`);\n  const res = await fetch(uri);\n  const blob = await res.blob();\n  const file = new File([blob], basename(uri), { type: blob.type });\n  console.timeEnd(`fetchAsFile: ${uri}`);\n  return file;\n}\n\nfunction basename(path: string) {\n  return path.substring(path.lastIndexOf(\"/\") + 1);\n}\n","import { Png, PngParser } from \"./png-parser\";\n\nexport class ImageBitmapLoader {\n  private pngParser: PngParser;\n\n  constructor(workerFactory: () => Worker) {\n    this.pngParser = new PngParser(workerFactory);\n  }\n\n  async loadSplat(file: File): Promise<ImageBitmap> {\n    return renderSplat(await this.pngParser.parse(file));\n  }\n\n  async loadRad(file: File): Promise<ImageBitmap> {\n    return renderRad(await this.pngParser.parse(file));\n  }\n}\n\n// splatX.png should convert the pixels which:\n//   * black to transparent\n//   * other to non-transparent\nfunction renderSplat(pngjs: Png) {\n  return render(pngjs, (indata, out) => {\n    for (let i = 0; i < indata.length; i += 4) {\n      out[i] = indata[i];\n      out[i + 1] = indata[i + 1];\n      out[i + 2] = indata[i + 2];\n      if (indata[i] === 0 && indata[i + 1] === 0 && indata[i + 2] === 0) {\n        out[i + 3] = 0;\n      } else {\n        out[i + 3] = 255;\n      }\n    }\n  });\n}\n\n// radioation.png should convert the pixels which:\n//   * red to non-transparent\n//   * other to transparent\nfunction renderRad(pngjs: Png) {\n  return render(pngjs, (indata, out) => {\n    for (let i = 0; i < indata.length; i += 4) {\n      out[i] = indata[i];\n      out[i + 1] = 0;\n      out[i + 2] = 0;\n      if (indata[i] !== 0) {\n        out[i + 3] = 255;\n      } else {\n        out[i + 3] = 0;\n      }\n    }\n  });\n}\n\ntype ConvertImageBitmap = (indata: Uint8Array, outData: Uint8ClampedArray) => void;\n\nfunction render({ data, height, width }: Png, copyFunction: ConvertImageBitmap) {\n  const canvas = new OffscreenCanvas(width, height);\n  const context = canvas.getContext(\"2d\");\n  if (!context) throw Error(\"Unexpected error: Canvas context not found\");\n  const imageData = context.getImageData(0, 0, width, height);\n  copyFunction(new Uint8Array(data), imageData.data);\n  context.putImageData(imageData, 0, 0);\n  return createImageBitmap(canvas);\n}\n","export function init(): void {\n  for (const button of Array.from(document.querySelectorAll(\"[data-copy-for]\"))) {\n    if (!(button instanceof HTMLButtonElement)) continue;\n\n    const target = document.getElementById(button.dataset.copyFor as string);\n    if (!target) continue;\n\n    button.addEventListener(\"click\", () => copy(target, button));\n  }\n}\n\nconst DEFAULT_SUCCESS_MESSAGE = \"Copied!\";\nconst DEFAULT_FAILURE_MESSAGE = \"⚠Failure\";\n\nfunction copy(target: HTMLElement, button: HTMLButtonElement) {\n  selectNode(target);\n\n  const commandResult = document.execCommand(\"copy\");\n  if (commandResult) {\n    console.log(\"Copy Success\", target);\n    button.dataset.message = button.dataset.successMessage ?? DEFAULT_SUCCESS_MESSAGE;\n  } else {\n    console.log(\"Copy Failure\", target);\n    button.dataset.message = button.dataset.failureMessage ?? DEFAULT_FAILURE_MESSAGE;\n  }\n\n  console.log(commandResult);\n}\n\nfunction selectNode(target: HTMLElement) {\n  const selection = getSelection();\n  selection?.removeAllRanges();\n\n  const range = document.createRange();\n  range.selectNodeContents(target);\n  selection?.addRange(range);\n}\n","import { requireNonnull, waitAnimationFrame } from \"./utils\";\n\nexport class DelayedRenderer<T> {\n  _iterator: Iterator<T[]> = ([] as T[][])[Symbol.iterator]();\n  appendee: HTMLElement;\n  scrollableWrapper: HTMLElement;\n  itemRenderer: (item: T) => Node;\n  scrollCallback = (): void => {\n    this.renderAll();\n  };\n\n  constructor(scrollableWrapper: HTMLElement, appendee: HTMLElement, itemRenderer: (item: T) => Node) {\n    if (!scrollableWrapper.contains(appendee)) throw Error(\"Wrapper element should contain appendee element\");\n    appendee.innerHTML = \"\";\n    this.appendee = appendee;\n    this.scrollableWrapper = scrollableWrapper;\n    this.itemRenderer = itemRenderer;\n  }\n\n  set iterator(iteratorOrIterable: Iterator<T> | Iterable<T>) {\n    if (\"next\" in iteratorOrIterable) {\n      this._iterator = chunkIterator(iteratorOrIterable);\n    } else {\n      this._iterator = chunkIterator(iteratorOrIterable[Symbol.iterator]());\n    }\n    this.appendee.innerHTML = \"\";\n    this.scrollableWrapper.removeEventListener(\"scroll\", this.scrollCallback);\n\n    // Require a delay because flashing childlen like the above fires \"scroll\" events.\n    requestAnimationFrame(() => {\n      this.scrollableWrapper.removeEventListener(\"scroll\", this.scrollCallback);\n      this.scrollableWrapper.addEventListener(\"scroll\", this.scrollCallback, { once: true });\n      renderUntil(this, () => isFill(this.scrollableWrapper));\n    });\n  }\n\n  async renderAll(): Promise<void> {\n    await renderUntil(this, () => false);\n  }\n}\n\nasync function renderUntil<T>(self: DelayedRenderer<T>, stopPredicate: () => boolean) {\n  while (!stopPredicate()) {\n    const result = self._iterator.next();\n    if (isReturn(result)) break;\n    const df = new DocumentFragment();\n    result.value.forEach((i) => df.appendChild(self.itemRenderer(i)));\n    self.appendee.appendChild(df);\n    await waitAnimationFrame();\n  }\n}\n\nfunction isFill(wrapper: HTMLElement) {\n  return wrapper.offsetHeight + 100 < wrapper.scrollHeight;\n}\n\nfunction chunkIterator<T, TReturn, TNext>(origin: Iterator<T, TReturn, TNext>, chunkSize = 10) {\n  let returnResult: IteratorReturnResult<TReturn> | null = null;\n  const chunkIter: Iterator<T[], TReturn, TNext> = {\n    next(...args: [] | [TNext]): IteratorResult<T[], TReturn> {\n      if (returnResult) return returnResult;\n      const chunk = Array<T>(chunkSize);\n      for (let i = 0; i < chunkSize; i++) {\n        const result = origin.next(...args);\n        if (isReturn(result)) {\n          returnResult = result;\n        } else {\n          chunk[i] = result.value;\n        }\n      }\n      return {\n        done: false,\n        value: chunk,\n      };\n    },\n  };\n  if (\"throw\" in origin) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    chunkIter.throw = (e?: any) => {\n      const r = requireNonnull(origin.throw)(e);\n      if (isReturn(r)) return r;\n      else return { done: r.done, value: [r.value] };\n    };\n  }\n  if (\"return\" in origin) {\n    chunkIter.return = (treturn?: TReturn) => {\n      const r = requireNonnull(origin.return)(treturn);\n      if (isReturn(r)) return r;\n      else return { done: r.done, value: [r.value] };\n    };\n  }\n  return chunkIter;\n}\n\nfunction isReturn<T, TReturn>(r: IteratorResult<T, TReturn>): r is IteratorReturnResult<TReturn> {\n  return Boolean(r.done);\n}\n","import { DBSchema, IDBPDatabase, openDB } from \"idb\";\nimport { requireNonnull } from \"./utils\";\n\nconst DB_NAME = \"7dtd-map\";\nconst DB_VERSION = 2;\nconst DEFAULT_WORLD_NAME = \"New-World\";\n\ntype Db = IDBPDatabase<DbSchema>;\ninterface DbSchema extends DBSchema {\n  maps: {\n    value: MapObject;\n    key: number;\n  };\n  largeObjects: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value: LargeObject<any>;\n    key: [number, string];\n  };\n  selectedMap: {\n    value: { id: number; mapId: number };\n    key: number;\n  };\n}\n\nexport interface MapObject {\n  id: number;\n  name: string;\n}\n\nexport const LARGE_OBJECT_TYPES = [\n  \"biomes\",\n  \"splat3\",\n  \"splat4\",\n  \"rad\",\n  \"elevations\",\n  \"subElevations\",\n  \"prefabs\",\n  \"generationInfo\",\n] as const;\ntype LargeObjectType = typeof LARGE_OBJECT_TYPES[number];\nexport interface LargeObjects {\n  // ImageBitmap for backward compatibility\n  biomes: ImageBitmap | PngBlob;\n  splat3: ImageBitmap | PngBlob;\n  splat4: ImageBitmap | PngBlob;\n  rad: ImageBitmap | PngBlob;\n  elevations: Uint8Array;\n  subElevations: Uint8Array;\n  prefabs: Prefab[];\n  generationInfo: string;\n}\nexport interface LargeObject<T extends LargeObjectType> {\n  mapId: number;\n  type: T;\n  data: LargeObjects[T];\n}\n\nconst MAP_PROPERTY_TYPES = [\"maps\", ...LARGE_OBJECT_TYPES] as const;\ntype MapPropertyType = typeof MAP_PROPERTY_TYPES[number];\ntype MapPropertyValue<T extends MapPropertyType> = T extends LargeObjectType ? LargeObject<T> : DbSchema[\"maps\"][\"value\"];\ntype MapPropertyRawValue<T extends MapPropertyType> = T extends LargeObjectType\n  ? LargeObject<T>[\"data\"]\n  : DbSchema[\"maps\"][\"value\"][\"name\"];\n\nfunction dbUpgrade(db: Db, oldVersion: number, newVersion: number) {\n  for (let version = oldVersion + 1; version <= newVersion; version++) {\n    if (version === 1) {\n      db.createObjectStore(\"maps\", { keyPath: \"id\", autoIncrement: true });\n      db.createObjectStore(\"largeObjects\", { keyPath: [\"mapId\", \"type\"] });\n    }\n    if (version === 2) {\n      db.createObjectStore(\"selectedMap\", { keyPath: \"id\" });\n    }\n  }\n}\n\nconst CHANGE_LISTENERS: ((mapId: number, instance: MapStorage) => Promise<unknown> | unknown)[] = [\n  (mapId) => console.log(\"MapStorage change current map\", mapId),\n];\n\nexport class MapStorage {\n  private _db?: Db;\n\n  async put<Type extends MapPropertyType>(type: Type, data: MapPropertyRawValue<Type>): Promise<void> {\n    const db = await this.getDb();\n    const mapId = await currentId(db);\n    if (isLargeObjectType(type)) {\n      await db.put(\"largeObjects\", { mapId, type, data });\n    } else if (type === \"maps\") {\n      await db.put(\"maps\", { id: mapId, name: data as MapPropertyRawValue<\"maps\"> });\n    } else {\n      throw Error(`Unreachable code: type=${type}`);\n    }\n  }\n\n  async getCurrent<Type extends MapPropertyType>(type: Type): Promise<MapPropertyValue<Type> | undefined> {\n    const db = await this.getDb();\n    const mapId = await currentId(db);\n    if (isLargeObjectType(type)) {\n      return (await db.get(\"largeObjects\", [mapId, type])) as MapPropertyValue<Type> | undefined;\n    } else if (type === \"maps\") {\n      return requireNonnull(await db.get(\"maps\", mapId), () => `Unexpected state: ${mapId}`) as MapPropertyValue<Type> | undefined;\n    } else {\n      throw Error(`Unreachable code: ${type}`);\n    }\n  }\n\n  async listMaps(): Promise<MapObject[]> {\n    const db = await this.getDb();\n    return db.getAll(\"maps\");\n  }\n\n  async createMap(name = DEFAULT_WORLD_NAME): Promise<MapObject> {\n    const db = await this.getDb();\n    return await createMap(db, name);\n  }\n\n  async deleteMap(mapIdOrUndefined?: number): Promise<void> {\n    const db = await this.getDb();\n    const mapId = mapIdOrUndefined ?? (await currentId(db));\n    await Promise.all([db.delete(\"maps\", mapId), ...LARGE_OBJECT_TYPES.map((t) => db.delete(\"largeObjects\", [mapId, t]))]);\n  }\n\n  async changeMap(mapId: number): Promise<void> {\n    const db = await this.getDb();\n    await Promise.all([changeMap(db, mapId), ...CHANGE_LISTENERS.map((fn) => fn(mapId, this))]);\n  }\n\n  async currentId(): Promise<number> {\n    return currentId(await this.getDb());\n  }\n\n  static addListener(listener: (mapId: number, self: MapStorage) => Promise<void>): void {\n    CHANGE_LISTENERS.push(listener);\n  }\n\n  private async getDb() {\n    if (!this._db) {\n      this._db = await openDB<DbSchema>(DB_NAME, DB_VERSION, { upgrade: dbUpgrade });\n    }\n    return this._db;\n  }\n}\n\nasync function createMap(db: Db, name: string) {\n  const id = await db.put(\"maps\", { name } as MapObject);\n  return { id, name };\n}\n\nfunction isLargeObjectType(type: MapPropertyType): type is LargeObjectType {\n  return (LARGE_OBJECT_TYPES as readonly string[]).includes(type);\n}\n\nasync function changeMap(db: Db, mapId: number) {\n  await db.put(\"selectedMap\", { id: 0, mapId });\n}\n\nasync function currentId(db: Db): Promise<number> {\n  const map = await db.get(\"selectedMap\", 0);\n  if (map) {\n    return map.mapId;\n  }\n\n  const all = await db.getAll(\"maps\");\n  if (all[0]) {\n    await changeMap(db, all[0].id);\n    return currentId(db);\n  }\n\n  const newMap = await createMap(db, DEFAULT_WORLD_NAME);\n  await changeMap(db, newMap.id);\n  return currentId(db);\n}\n","import * as pngjsWorker from \"../worker/pngjs\";\n\nexport interface Png {\n  width: number;\n  height: number;\n  data: ArrayBuffer;\n}\n\nexport class PngParser {\n  private workerFactory: () => Worker;\n\n  constructor(workerFactory: () => Worker) {\n    this.workerFactory = workerFactory;\n  }\n\n  async parse(blob: Blob): Promise<Png> {\n    const worker = this.workerFactory();\n    const data = await blob.arrayBuffer();\n    worker.postMessage(data, [data]);\n    const event: MessageEvent<pngjsWorker.OutMessage> = await new Promise((resolve, reject) => {\n      worker.onmessage = resolve;\n      worker.onerror = reject;\n      worker.onmessageerror = reject;\n    });\n    worker.terminate();\n    return event.data;\n  }\n}\n","import { component, requireNonnull } from \"./utils\";\n\nexport function init(): void {\n  document.body.addEventListener(\"click\", ({ target }) => {\n    if (target instanceof HTMLButtonElement && target.dataset.inputFor != null) {\n      const input = component(target.dataset.inputFor, HTMLInputElement);\n      input.value = requireNonnull(target.dataset.inputText ?? target.textContent);\n      input.dispatchEvent(new Event(\"input\"));\n    }\n  });\n}\n","import { waitAnimationFrame } from \"./utils\";\n\nexport function throttledInvoker(asyncFunc: () => Promise<void>): () => Promise<void> {\n  const workerPromises: Promise<void>[] = [];\n  return () => {\n    switch (workerPromises.length) {\n      case 0: {\n        workerPromises.push(\n          (async () => {\n            await asyncFunc();\n            workerPromises.shift();\n          })()\n        );\n        return workerPromises[0];\n      }\n      case 1:\n        const prev = workerPromises[0];\n        workerPromises.push(\n          (async () => {\n            await prev;\n            await waitAnimationFrame();\n            await asyncFunc();\n            workerPromises.shift();\n          })()\n        );\n        return workerPromises[1];\n\n      case 2:\n        return workerPromises[1];\n      default:\n        throw Error(`Unexpected state: promiceses=${workerPromises.length}`);\n    }\n  };\n}\n","export function requireNonnull<T>(t: T | undefined | null, message = () => `Unexpected state: ${t}`): T {\n  if (t != null) return t;\n  else throw Error(message());\n}\n\nexport function requireType<T>(o: unknown, t: { new (...a: unknown[]): T }, message = () => `Unexpected type: ${o}`): T {\n  if (o instanceof t) return o;\n  throw Error(message());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | null | undefined, t?: { new (...a: unknown[]): T }): T {\n  const e = requireNonnull(\n    document.getElementById(requireNonnull(id, () => `Element ID must not null: ${id}`)),\n    () => `Element not found: #${id}`\n  );\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance(d: number): string {\n  if (d < 1000) {\n    return `${d}m`;\n  }\n  return `${(d / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport function formatCoords(\n  map: GameMapSize,\n  canvas: HTMLCanvasElement,\n  elevation: (coods: GameCoords, mapSize: GameMapSize) => number | null,\n  event: EventOffsets | null\n): string {\n  if (!event) return \"E/W: -, N/S: -, Elev: -\";\n\n  const gameCoords = canvasEventToGameCoords(event, map, canvas);\n  if (gameCoords === null) {\n    return \"E/W: -, N/S: -, Elev: -\";\n  }\n\n  const y = elevation(gameCoords, map) ?? \"-\";\n  return `E/W: ${gameCoords.x}, N/S: ${gameCoords.z}, Elev: ${y}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n\nexport async function imageBitmapToPngBlob(img: ImageBitmap): Promise<PngBlob> {\n  const canvas = new OffscreenCanvas(img.height, img.width);\n  const context = requireNonnull(canvas.getContext(\"2d\"));\n  context.drawImage(img, 0, 0);\n  return (await canvas.convertToBlob({ type: \"image/png\" })) as PngBlob;\n}\n\nexport async function sleep(msec: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, msec));\n}\n\nexport function gameMapSize(s: { width: number; height: number }): GameMapSize {\n  return { type: \"game\", ...s };\n}\n\nexport function gameCoords(c: { x: number; z: number }): GameCoords {\n  return { type: \"game\", ...c };\n}\n\n/** Returns null if the event was fired out of the canvas */\nexport function canvasEventToGameCoords(event: EventOffsets, mapSize: GameMapSize, canvasSize: HTMLCanvasElement): GameCoords | null {\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * mapSize.width) / canvasSize.width;\n  const gz = (event.offsetY * mapSize.height) / canvasSize.height;\n  if (gx < 0 || gx >= mapSize.width || gz < 0 || gz >= mapSize.height) {\n    return null;\n  }\n\n  // in-game coords (center offset)\n  const x = gx - Math.floor(mapSize.width / 2);\n  const z = Math.floor(mapSize.height / 2) - gz;\n  return gameCoords({ x: Math.round(x), z: Math.round(z) });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(341);\n"],"sourceRoot":""}