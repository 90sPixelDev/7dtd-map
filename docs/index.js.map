{"version":3,"sources":["webpack://7dtd-map/./node_modules/idb/build/esm/wrap-idb-value.js","webpack://7dtd-map/./node_modules/idb/build/esm/index.js","webpack://7dtd-map/./src/index.ts","webpack://7dtd-map/./src/index/cursor-coods-handler.ts","webpack://7dtd-map/./src/index/dnd-handler.ts","webpack://7dtd-map/./src/index/dtm-handler.ts","webpack://7dtd-map/./src/index/file-handler.ts","webpack://7dtd-map/./src/index/generation-info-handler.ts","webpack://7dtd-map/./src/index/loading-handler.ts","webpack://7dtd-map/./src/index/map-canvas-handler.ts","webpack://7dtd-map/./src/index/map-selector.ts","webpack://7dtd-map/./src/index/marker-handler.ts","webpack://7dtd-map/./src/index/prefabs-handler.ts","webpack://7dtd-map/./src/index/sample-world-loader.ts","webpack://7dtd-map/./src/lib/bitmap-loader.ts","webpack://7dtd-map/./src/lib/copy-button.ts","webpack://7dtd-map/./src/lib/delayed-renderer.ts","webpack://7dtd-map/./src/lib/map-storage.ts","webpack://7dtd-map/./src/lib/png-parser.ts","webpack://7dtd-map/./src/lib/preset-button.ts","webpack://7dtd-map/./src/lib/throttled-invoker.ts","webpack://7dtd-map/./src/lib/utils.ts","webpack://7dtd-map/webpack/bootstrap","webpack://7dtd-map/webpack/runtime/define property getters","webpack://7dtd-map/webpack/runtime/hasOwnProperty shorthand","webpack://7dtd-map/webpack/runtime/make namespace object","webpack://7dtd-map/webpack/startup"],"names":["idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","target","prop","receiver","IDBTransaction","get","objectStoreNames","undefined","objectStore","wrap","set","value","has","transformCachableValue","func","IDBDatabase","prototype","transaction","IDBCursor","advance","continue","continuePrimaryKey","includes","args","apply","unwrap","this","storeNames","tx","call","sort","done","Promise","resolve","reject","unlisten","removeEventListener","complete","error","DOMException","addEventListener","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","c","Proxy","IDBRequest","request","promise","success","result","then","catch","promisifyRequest","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","async","storeName","store","index","shift","all","oldTraps","main","presetButton","init","copyButton","loadingHandler","LoadingHandler","indicator","component","disablings","files","HTMLInputElement","select","HTMLSelectElement","create","HTMLButtonElement","delete","mapName","mapStorage","MapStorage","MapSelector","mapCanvasHandler","MapCanvasHandler","canvas","HTMLCanvasElement","biomesAlpha","splat3Alpha","splat4Alpha","radAlpha","signSize","signAlpha","brightness","scale","Worker","generationInfoHandler","GenerationInfoHandler","output","HTMLTextAreaElement","dtmHandler","DtmHandler","prefabsHandler","PrefabsHandler","status","HTMLElement","prefabFilter","blockFilter","listeners","push","prefabs","update","prefabListRenderer","DelayedRenderer","p","prefab","li","document","createElement","innerHTML","dist","humanreadableDistance","highlightedName","x","z","join","matchedBlocks","length","blocksUl","forEach","block","blockLi","count","highlightedLabel","appendChild","prefabLi","iterator","cursorCoodsHandler","CursorCoodsHandler","coords","width","dtm","getElevation","addMapSizeListener","size","mapSize","markerHandler","MarkerHandler","resetMarker","marker","markerCoords","imageLoader","ImageBitmapLoader","fileHandler","FileHandler","input","addListeners","file","biomesImg","createImageBitmap","splat3Img","loadSplat","splat4Img","radImg","loadRad","handle","DndHandler","addDropFilesListener","pushFiles","SampleWorldLoader","addListenr","f","downloadCanvasPng","readyState","updateCursor","self","doms","textContent","formatCoords","elevationFunction","height","e","passive","doc","dropFilesListeners","dataTransfer","types","preventDefault","Array","from","fn","body","classList","add","dropEffect","clientX","clientY","remove","ln","Dtm","bitmap","data","storage","workerFactory","pngParser","PngParser","addListener","h","getCurrent","blobOrUrl","loadDtmByPngUrl","type","toLocaleLowerCase","loadByPngBlob","Error","blob","src","Uint8Array","arrayBuffer","i","loadDtmByRaw","put","url","res","fetch","png","pngData","convertPng","parse","throttledProcess","processFiles","arr","n","fileName","listener","old","concat","filtered","filter","getListeners","updateFiles","dispatchEvent","Event","map","popFile","File","console","log","shouldSkip","time","timeEnd","waitAnimationFrame","entries","flatMap","pattern","RegExp","test","slice","dt","DataTransfer","items","generationInfoOrBlob","generationInfo","text","worldName","exec","trim","extractWorldName","ANIMATION_FRAMES","_loadingList","list","startAnimation","loading","s","isDisable","Object","values","disabled","disableAll","bar","Math","floor","Date","now","FIELDNAME_STORAGENAME_MAP","isTransferable","v","ImageBitmap","OffscreenCanvas","worker","mapSizeListeners","transferControlToOffscreen","currentId","mapSizes","msg","shouldStore","entry","transferables","postMessage","valueAsNumber","buildOptionElement","dataset","mapId","requireNonnull","id","toString","initPromise","selectedOptions","parseInt","selectedOption","buildOptions","changeMap","selectedOptionMapId","deleteMap","maps","listMaps","df","DocumentFragment","m","removeAllChildren","selectOptionByMapId","createMap","options","removeChild","isInit","selectedIndex","findIndex","o","isDisabled","d","updateMarker","markCoords","round","offsetX","offsetY","eventName","prefabsFilterString","activeFilter","blocksFilterString","xml","dom","DOMParser","parseFromString","getElementsByTagName","position","getAttribute","split","SAMPLE_WORLD_FILES","button","querySelectorAll","loadSampleWorld","dir","sampleDir","uri","path","substring","lastIndexOf","fetchAsFile","render","copyFunction","context","getContext","imageData","getImageData","putImageData","indata","out","copy","selection","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","selectNode","commandResult","execCommand","message","successMessage","failureMessage","getElementById","copyFor","renderUntil","stopPredicate","_iterator","next","isReturn","itemRenderer","appendee","r","Boolean","scrollableWrapper","Symbol","scrollCallback","renderAll","contains","iteratorOrIterable","origin","chunkSize","returnResult","chunkIter","chunk","throw","return","treturn","chunkIterator","requestAnimationFrame","once","isFill","wrapper","offsetHeight","scrollHeight","dbUpgrade","createObjectStore","keyPath","autoIncrement","LARGE_OBJECT_TYPES","CHANGE_LISTENERS","getDb","_db","isLargeObjectType","getAll","newMap","DEFAULT_WORLD_NAME","mapIdOrUndefined","t","onmessage","onerror","onmessageerror","terminate","inputFor","inputText","asyncFunc","updateRequest","workerPromise","requireType","lastChild","toFixed","elevation","gx","gz","a","download","href","toDataURL","click","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","key","defineProperty","enumerable","obj","hasOwnProperty","toStringTag"],"mappings":"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","file":"index.js","sourcesContent":["const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { ImageBitmapLoader } from \"./lib/bitmap-loader\";\nimport * as copyButton from \"./lib/copy-button\";\nimport * as presetButton from \"./lib/preset-button\";\nimport { MapSelector } from \"./index/map-selector\";\nimport { MapStorage } from \"./lib/map-storage\";\nimport { component, downloadCanvasPng, humanreadableDistance } from \"./lib/utils\";\nimport { GenerationInfoHandler } from \"./index/generation-info-handler\";\nimport { DtmHandler } from \"./index/dtm-handler\";\nimport { PrefabsHandler } from \"./index/prefabs-handler\";\nimport { DelayedRenderer } from \"./lib/delayed-renderer\";\nimport { CursorCoodsHandler } from \"./index/cursor-coods-handler\";\nimport { MarkerHandler } from \"./index/marker-handler\";\nimport { FileHandler } from \"./index/file-handler\";\nimport { MapCanvasHandler } from \"./index/map-canvas-handler\";\nimport { DndHandler } from \"./index/dnd-handler\";\nimport { SampleWorldLoader } from \"./index/sample-world-loader\";\nimport { LoadingHandler } from \"./index/loading-handler\";\n\nfunction main() {\n  presetButton.init();\n  copyButton.init();\n\n  const loadingHandler = new LoadingHandler({\n    indicator: component(\"loading_indicator\"),\n    disablings: {\n      files: component(\"files\", HTMLInputElement),\n      select: component(\"map_list\", HTMLSelectElement),\n      create: component(\"create_map\", HTMLButtonElement),\n      delete: component(\"delete_map\", HTMLButtonElement),\n      mapName: component(\"map_name\", HTMLInputElement),\n    },\n  });\n\n  const mapStorage = new MapStorage();\n  new MapSelector(\n    {\n      select: component(\"map_list\", HTMLSelectElement),\n      create: component(\"create_map\", HTMLButtonElement),\n      delete: component(\"delete_map\", HTMLButtonElement),\n      mapName: component(\"map_name\", HTMLInputElement),\n    },\n    mapStorage\n  );\n\n  const mapCanvasHandler = new MapCanvasHandler(\n    {\n      canvas: component(\"map\", HTMLCanvasElement),\n      biomesAlpha: component(\"biomes_alpha\", HTMLInputElement),\n      splat3Alpha: component(\"splat3_alpha\", HTMLInputElement),\n      splat4Alpha: component(\"splat4_alpha\", HTMLInputElement),\n      radAlpha: component(\"rad_alpha\", HTMLInputElement),\n      signSize: component(\"sign_size\", HTMLInputElement),\n      signAlpha: component(\"sign_alpha\", HTMLInputElement),\n      brightness: component(\"brightness\", HTMLInputElement),\n      scale: component(\"scale\", HTMLInputElement),\n    },\n    new Worker(\"worker/map-renderer.js\"),\n    mapStorage,\n    loadingHandler\n  );\n\n  const generationInfoHandler = new GenerationInfoHandler(\n    {\n      mapName: component(\"map_name\", HTMLInputElement),\n      output: component(\"generation_info_output\", HTMLTextAreaElement),\n    },\n    mapStorage\n  );\n\n  const dtmHandler = new DtmHandler(mapStorage, () => new Worker(\"worker/pngjs.js\"));\n\n  const prefabsHandler = new PrefabsHandler(\n    {\n      status: component(\"prefabs_num\", HTMLElement),\n      prefabFilter: component(\"prefabs_filter\", HTMLInputElement),\n      blockFilter: component(\"blocks_filter\", HTMLInputElement),\n    },\n    new Worker(\"worker/prefabs-filter.js\"),\n    mapStorage\n  );\n  prefabsHandler.listeners.push(async (prefabs) => {\n    mapCanvasHandler.update({ prefabs });\n  });\n\n  const prefabListRenderer = new DelayedRenderer<HighlightedPrefab>(\n    component(\"controller\", HTMLElement),\n    component(\"prefabs_list\", HTMLElement),\n    (p) => prefabLi(p)\n  );\n  prefabsHandler.listeners.push(async (prefabs) => {\n    prefabListRenderer.iterator = prefabs;\n  });\n\n  const cursorCoodsHandler = new CursorCoodsHandler(\n    {\n      canvas: component(\"map\", HTMLCanvasElement),\n      output: component(\"cursor_coods\", HTMLElement),\n    },\n    (coords, width) => dtmHandler.dtm?.getElevation(coords.x, coords.z, width) ?? null\n  );\n  mapCanvasHandler.addMapSizeListener((size) => (cursorCoodsHandler.mapSize = size));\n\n  const markerHandler = new MarkerHandler(\n    {\n      canvas: component(\"map\", HTMLCanvasElement),\n      output: component(\"mark_coods\", HTMLElement),\n      resetMarker: component(\"reset_mark\", HTMLButtonElement),\n    },\n    (coords, width) => dtmHandler.dtm?.getElevation(coords.x, coords.z, width) ?? null\n  );\n  mapCanvasHandler.addMapSizeListener((size) => (markerHandler.mapSize = size));\n  markerHandler.listeners.push(async (coords) => {\n    prefabsHandler.marker = coords;\n    mapCanvasHandler.update({ markerCoords: coords });\n  });\n\n  const imageLoader = new ImageBitmapLoader(() => new Worker(\"worker/pngjs.js\"));\n  const fileHandler = new FileHandler({ input: component(\"files\", HTMLInputElement) }, loadingHandler);\n  fileHandler.addListeners([\n    [\"biomes.png\", async (file) => mapCanvasHandler.update({ biomesImg: await createImageBitmap(file) })],\n    [/splat3(_processed)?\\.png/, async (file) => mapCanvasHandler.update({ splat3Img: await imageLoader.loadSplat(file) })],\n    [\"splat4_processed.png\", async (file) => mapCanvasHandler.update({ splat4Img: await imageLoader.loadSplat(file) })],\n    [\"radiation.png\", async (file) => mapCanvasHandler.update({ radImg: await imageLoader.loadRad(file) })],\n    [\"prefabs.xml\", async (file) => await prefabsHandler.handle(file)],\n    [/dtm\\.(raw|png)/, async (file) => await dtmHandler.handle(file)],\n    [\"GenerationInfo.txt\", async (file) => await generationInfoHandler.handle(file)],\n  ]);\n\n  const dndHandler = new DndHandler(document);\n  dndHandler.addDropFilesListener((files) => fileHandler.pushFiles(files));\n\n  const sampleWorldLoader = new SampleWorldLoader();\n  sampleWorldLoader.addListenr((f) => fileHandler.pushFiles([f]));\n\n  component(\"download\").addEventListener(\"click\", () => {\n    const mapName = component(\"map_name\", HTMLInputElement).value ?? \"7dtd-map\";\n    downloadCanvasPng(`${mapName}.png`, component(\"map\", HTMLCanvasElement));\n  });\n}\n\nfunction prefabLi(prefab: HighlightedPrefab) {\n  const li = document.createElement(\"li\");\n  li.innerHTML = [\n    `<button data-input-for=\"prefabs_filter\" data-input-text=\"${prefab.name}\" title=\"Filter with this prefab name\">▲</button>`,\n    prefab.dist ? `${humanreadableDistance(prefab.dist)},` : \"\",\n    `<a href=\"prefabs/${prefab.name}.html\" target=\"_blank\">${prefab.highlightedName || prefab.name}</a>`,\n    `(${prefab.x}, ${prefab.z})`,\n  ].join(\" \");\n  if (prefab.matchedBlocks && prefab.matchedBlocks.length > 0) {\n    const blocksUl = document.createElement(\"ul\");\n    prefab.matchedBlocks.forEach((block) => {\n      const blockLi = document.createElement(\"li\");\n      blockLi.innerHTML = [\n        `<button data-input-for=\"blocks_filter\" data-input-text=\"${block.name}\" title=\"Filter with this block name\">▲</button>`,\n        `${block.count}x`,\n        block.highlightedLabel,\n        `<small>${block.highlightedName}</small>`,\n      ].join(\" \");\n      blocksUl.appendChild(blockLi);\n    });\n    li.appendChild(blocksUl);\n  }\n  return li;\n}\n\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", main);\n} else {\n  main();\n}\n","import { formatCoords } from \"../lib/utils\";\n\ninterface Doms {\n  canvas: HTMLCanvasElement;\n  output: HTMLElement;\n}\n\nexport class CursorCoodsHandler {\n  mapSize: RectSize = { width: 0, height: 0 };\n  elevationFunction: (coods: Coords, width: number) => number | null;\n  doms: Doms;\n\n  constructor(doms: Doms, elevationFunction: (coords: Coords, width: number) => number | null) {\n    this.elevationFunction = elevationFunction;\n    this.doms = doms;\n\n    doms.canvas.addEventListener(\"mousemove\", (e) => updateCursor(this, e), { passive: true });\n    doms.canvas.addEventListener(\"mouseout\", () => updateCursor(this));\n  }\n}\n\nfunction updateCursor(self: CursorCoodsHandler, event: MouseEvent | null = null) {\n  self.doms.output.textContent = formatCoords(self.mapSize, self.doms.canvas, self.elevationFunction, event);\n}\n","export class DndHandler {\n  private dropFilesListeners: ((files: File[]) => Promise<unknown> | unknown)[] = [];\n\n  constructor(doc: Document) {\n    doc.addEventListener(\"drop\", async (event) => {\n      if (!event.dataTransfer?.types.includes(\"Files\")) {\n        return;\n      }\n      event.preventDefault();\n      const files = Array.from(event.dataTransfer.files);\n      this.dropFilesListeners.forEach((fn) => fn(files));\n    });\n\n    doc.addEventListener(\"dragenter\", (event) => {\n      if (!event.dataTransfer?.types.includes(\"Files\")) {\n        return;\n      }\n      event.preventDefault();\n      doc.body.classList.add(\"dragovered\");\n    });\n    doc.addEventListener(\"dragover\", (event) => {\n      if (!event.dataTransfer?.types.includes(\"Files\")) {\n        return;\n      }\n      event.preventDefault();\n      event.dataTransfer.dropEffect = \"copy\";\n      doc.body.classList.add(\"dragovered\");\n    });\n    doc.addEventListener(\"dragleave\", (event) => {\n      // \"dragleave\" events raise even if the cursor moved on child nodes.\n      // To avoid this case, we should check cursor positions.\n      // Those are zero if the cursor moved out from the browser window.\n      if (event.clientX !== 0 || event.clientY !== 0) {\n        return;\n      }\n      event.preventDefault();\n      doc.body.classList.remove(\"dragovered\");\n    });\n    doc.addEventListener(\"drop\", async (event) => {\n      if (!event.dataTransfer?.types.includes(\"Files\")) {\n        return;\n      }\n      event.preventDefault();\n      doc.body.classList.remove(\"dragovered\");\n    });\n  }\n\n  addDropFilesListener(ln: (files: File[]) => Promise<unknown> | unknown): void {\n    this.dropFilesListeners.push(ln);\n  }\n}\n","import { MapStorage } from \"../lib/map-storage\";\nimport { Png, PngParser } from \"../lib/png-parser\";\n\nexport class Dtm {\n  data: Uint8Array;\n\n  constructor(bitmap: Uint8Array) {\n    this.data = bitmap;\n  }\n\n  getElevation(x: number, z: number, width: number): number {\n    return this.data[x + z * width];\n  }\n}\n\nexport class DtmHandler {\n  private storage: MapStorage;\n  private pngParser: PngParser;\n\n  dtm: Dtm | null = null;\n\n  constructor(storage: MapStorage, workerFactory: () => Worker) {\n    this.storage = storage;\n    this.pngParser = new PngParser(workerFactory);\n    MapStorage.addListener(async () => {\n      const h = await storage.getCurrent(\"elevations\");\n      if (h) {\n        this.dtm = new Dtm(h.data);\n      } else {\n        this.dtm = null;\n      }\n    });\n  }\n\n  async handle(blobOrUrl: File | string): Promise<void> {\n    if (typeof blobOrUrl === \"string\") {\n      this.dtm = await this.loadDtmByPngUrl(blobOrUrl);\n    } else if (blobOrUrl.type.toLocaleLowerCase() === \"image/png\") {\n      this.dtm = await this.loadByPngBlob(blobOrUrl);\n    } else if (blobOrUrl.type.toLocaleLowerCase() === \"image/raw\") {\n      this.dtm = await loadDtmByRaw(blobOrUrl);\n    } else {\n      throw Error(`Unknown data type: name=${blobOrUrl.name}, type=${blobOrUrl.type}`);\n    }\n    this.storage.put(\"elevations\", this.dtm.data);\n  }\n\n  private async loadDtmByPngUrl(url: string): Promise<Dtm> {\n    const res = await fetch(url);\n    return this.loadByPngBlob(await res.blob());\n  }\n\n  private async loadByPngBlob(blob: Blob): Promise<Dtm> {\n    return convertPng(await this.pngParser.parse(blob));\n  }\n}\n\nfunction convertPng(png: Png) {\n  const pngData = new Uint8Array(png.data);\n  const data = new Uint8Array(pngData.length / 4);\n  for (let i = 0; i < data.length; i++) {\n    data[i] = pngData[i * 4];\n  }\n  return new Dtm(data);\n}\n\nasync function loadDtmByRaw(blob: Blob): Promise<Dtm> {\n  const src = new Uint8Array(await blob.arrayBuffer());\n  const data = new Uint8Array(src.length / 2);\n  for (let i = 0; i < data.length; i++) {\n    // Higher 8 bits are a sub height in a block\n    // Lower 8 bits are a height\n    data[i] = src[i * 2 + 1];\n  }\n  return new Dtm(data);\n}\n","import throttledInvoker from \"../lib/throttled-invoker\";\nimport { waitAnimationFrame } from \"../lib/utils\";\nimport { LoadingHandler } from \"./loading-handler\";\n\ninterface Doms {\n  input: HTMLInputElement;\n}\n\ntype Listener = (file: File) => Promise<unknown> | unknown;\n\nexport class FileHandler {\n  private doms: Doms;\n  private listeners: Map<RegExp | string, Listener[]> = new Map();\n  loadingHandler: LoadingHandler;\n\n  constructor(doms: Doms, loadingHandler: LoadingHandler) {\n    this.doms = doms;\n    this.loadingHandler = loadingHandler;\n\n    const throttledProcess = throttledInvoker(() => this.processFiles());\n    doms.input.addEventListener(\"input\", throttledProcess);\n  }\n\n  addListeners(arr: [RegExp | string, Listener | Listener[]][]): void {\n    arr.forEach(([n, ln]) => this.addListener(n, ln));\n  }\n\n  addListener(fileName: RegExp | string, listener: Listener | Listener[]): void {\n    const old = this.listeners.get(fileName) ?? [];\n    this.listeners.set(fileName, old.concat(listener));\n  }\n\n  pushFiles(files: File[]): void {\n    const filtered = files.filter((file) => this.getListeners(file.name).length !== 0);\n    this.updateFiles([...Array.from(this.doms.input.files ?? []), ...filtered]);\n    this.doms.input.dispatchEvent(new Event(\"input\"));\n  }\n\n  private async processFiles() {\n    this.loadingHandler.add(Array.from(this.doms.input.files ?? []).map((f) => f.name));\n    let file = this.popFile();\n    while (file instanceof File) {\n      const listeners = this.getListeners(file.name);\n      if (listeners.length === 0) {\n        console.log(\"No hundler: \", file);\n      } else if (this.shouldSkip(file)) {\n        console.log(\"Skip: \", file);\n      } else {\n        console.time(`Processed: ${file.name}`);\n        await Promise.all(listeners.map(async (fn) => fn(file as File)));\n        console.timeEnd(`Processed: ${file.name}`);\n      }\n      this.loadingHandler.delete(file.name);\n      await waitAnimationFrame();\n      file = this.popFile();\n    }\n  }\n\n  private getListeners(fileName: string) {\n    return Array.from(this.listeners.entries()).flatMap(([pattern, listeners]) => {\n      if (pattern instanceof RegExp && pattern.test(fileName)) return listeners;\n      if (typeof pattern === \"string\" && pattern === fileName) return listeners;\n      return [];\n    });\n  }\n\n  private popFile(): File | null {\n    if (!this.doms.input.files?.length) return null;\n    const files = Array.from(this.doms.input.files);\n    this.updateFiles(files.slice(1));\n    return files[0];\n  }\n\n  private shouldSkip(file: File): boolean {\n    if (file.name === \"splat3.png\") {\n      return Array.from(this.doms.input.files ?? [])\n        .map((f) => f.name)\n        .includes(\"splat3_processed.png\");\n    }\n    return false;\n  }\n\n  private updateFiles(files: File[]) {\n    this.doms.input.files = dataTransfer(files).files;\n  }\n}\n\nfunction dataTransfer(files: File[]): DataTransfer {\n  const dt = new DataTransfer();\n  for (const f of files) dt.items.add(f);\n  return dt;\n}\n","import { MapStorage } from \"../lib/map-storage\";\n\ninterface Doms {\n  mapName: HTMLInputElement;\n  output: HTMLTextAreaElement;\n}\n\ntype BlobLike = { text: () => Promise<string> };\n\nexport class GenerationInfoHandler {\n  doms: Doms;\n  storage: MapStorage;\n\n  constructor(doms: Doms, storage: MapStorage) {\n    this.doms = doms;\n    this.storage = storage;\n\n    MapStorage.addListener(async () => {\n      const i = await storage.getCurrent(\"generationInfo\");\n      doms.output.value = i?.data ?? \"\";\n    });\n  }\n\n  async handle(generationInfoOrBlob: string | BlobLike): Promise<void> {\n    let generationInfo;\n    if (typeof generationInfoOrBlob === \"string\") {\n      generationInfo = generationInfoOrBlob;\n    } else {\n      generationInfo = await generationInfoOrBlob.text();\n    }\n\n    const worldName = extractWorldName(generationInfo);\n    if (worldName) {\n      this.doms.mapName.value = worldName;\n      this.doms.mapName.dispatchEvent(new Event(\"input\"));\n    }\n\n    this.doms.output.value = generationInfo;\n    this.doms.mapName.dispatchEvent(new Event(\"input\"));\n\n    this.storage.put(\"generationInfo\", generationInfo);\n  }\n}\n\nfunction extractWorldName(generationInfo: string) {\n  return /^World Name:(.*)$/m.exec(generationInfo)?.[1].trim();\n}\n","import { waitAnimationFrame } from \"../lib/utils\";\n\ninterface Doms {\n  indicator: HTMLElement;\n  disablings: {\n    files: HTMLInputElement;\n    select: HTMLSelectElement;\n    create: HTMLButtonElement;\n    delete: HTMLButtonElement;\n    mapName: HTMLInputElement;\n  };\n}\n\nconst ANIMATION_FRAMES = [\"｜\", \"／\", \"―\", \"＼\"];\nconst ANIMATION_INTERVAL_MSEC = 1000;\n\n// Loading progression maanger\nexport class LoadingHandler {\n  private doms: Doms;\n  private _loadingList: string[] = [];\n\n  constructor(doms: Doms) {\n    this.doms = doms;\n  }\n\n  add(list: string[] | string): void {\n    this._loadingList = this._loadingList.concat(list);\n    this.startAnimation();\n  }\n\n  delete(loading: string): void {\n    this._loadingList = this._loadingList.filter((s) => s !== loading);\n  }\n\n  private disableAll(isDisable: boolean) {\n    Object.values(this.doms.disablings).forEach((e) => (e.disabled = isDisable));\n  }\n\n  private async startAnimation() {\n    this.disableAll(true);\n    while (this._loadingList.length !== 0) {\n      this.doms.indicator.textContent = `${this.bar()} Loading: ${this._loadingList.join(\", \")}`;\n      await waitAnimationFrame();\n    }\n    this.doms.indicator.textContent = \"\";\n    this.disableAll(false);\n  }\n\n  private bar() {\n    return ANIMATION_FRAMES[Math.floor(Date.now() / ANIMATION_INTERVAL_MSEC) % ANIMATION_FRAMES.length];\n  }\n}\n","import { MapStorage } from \"../lib/map-storage\";\nimport { MapRendererInMessage, MapRendererOutMessage } from \"../worker/map-renderer\";\nimport { LoadingHandler } from \"./loading-handler\";\n\nconst FIELDNAME_STORAGENAME_MAP = {\n  biomesImg: \"biomes\",\n  splat3Img: \"splat3\",\n  splat4Img: \"splat4\",\n  radImg: \"rad\",\n} as const;\n\ninterface Doms {\n  canvas: HTMLCanvasElement;\n  biomesAlpha: HTMLInputElement;\n  splat3Alpha: HTMLInputElement;\n  splat4Alpha: HTMLInputElement;\n  radAlpha: HTMLInputElement;\n  signSize: HTMLInputElement;\n  signAlpha: HTMLInputElement;\n  brightness: HTMLInputElement;\n  scale: HTMLInputElement;\n}\n\nexport class MapCanvasHandler {\n  private doms: Doms;\n  private worker: Worker;\n  private storage: MapStorage;\n  private mapSizeListeners: ((mapSize: RectSize) => Promise<unknown> | unknown)[] = [];\n\n  constructor(doms: Doms, worker: Worker, storage: MapStorage, loadingHandler: LoadingHandler) {\n    this.doms = doms;\n    this.worker = worker;\n    this.storage = storage;\n\n    this.update({\n      canvas: doms.canvas.transferControlToOffscreen(),\n      ...this.biomesAlpha(),\n      ...this.splat3Alpha(),\n      ...this.splat4Alpha(),\n      ...this.radAlpha(),\n      ...this.brightness(),\n      ...this.signSize(),\n      ...this.signAlpha(),\n      ...this.scale(),\n    });\n\n    MapStorage.addListener(async () => {\n      console.log(\"Change map: \", await storage.currentId());\n      this.update({ biomesImg: null, splat3Img: null, splat4Img: null, radImg: null }, false);\n      loadingHandler.add([\"bioms\", \"splat3\", \"splat4\", \"radiation\"]);\n      this.update({ biomesImg: (await storage.getCurrent(\"biomes\"))?.data }, false);\n      loadingHandler.delete(\"bioms\");\n      this.update({ splat3Img: (await storage.getCurrent(\"splat3\"))?.data }, false);\n      loadingHandler.delete(\"splat3\");\n      this.update({ splat4Img: (await storage.getCurrent(\"splat4\"))?.data }, false);\n      loadingHandler.delete(\"splat4\");\n      this.update({ radImg: (await storage.getCurrent(\"rad\"))?.data }, false);\n      loadingHandler.delete(\"radiation\");\n    });\n\n    worker.addEventListener(\"message\", (e: MessageEvent<MapRendererOutMessage>) => {\n      const { mapSize: mapSizes } = e.data;\n      this.mapSizeListeners.map((fn) => fn(mapSizes));\n    });\n    doms.biomesAlpha.addEventListener(\"input\", () => this.update(this.biomesAlpha()));\n    doms.splat3Alpha.addEventListener(\"input\", () => this.update(this.splat3Alpha()));\n    doms.splat4Alpha.addEventListener(\"input\", () => this.update(this.splat4Alpha()));\n    doms.radAlpha.addEventListener(\"input\", () => this.update(this.radAlpha()));\n    doms.signSize.addEventListener(\"input\", () => this.update(this.signSize()));\n    doms.signAlpha.addEventListener(\"input\", () => this.update(this.signAlpha()));\n    doms.brightness.addEventListener(\"input\", () => this.update(this.brightness()));\n    doms.scale.addEventListener(\"input\", () => this.update(this.scale()));\n  }\n\n  async update(msg: MapRendererInMessage, shouldStore = true): Promise<void> {\n    if (shouldStore) {\n      for (const entry of Object.entries(msg)) {\n        if (isStoreTarget(entry)) {\n          await this.storage.put(FIELDNAME_STORAGENAME_MAP[entry[0]], entry[1]);\n        }\n      }\n    }\n    const transferables = Object.values(msg).filter(isTransferable);\n    this.worker.postMessage(msg, transferables);\n  }\n\n  addMapSizeListener(ln: (mapSize: RectSize) => Promise<unknown> | unknown): void {\n    this.mapSizeListeners.push(ln);\n  }\n\n  private biomesAlpha() {\n    return { biomesAlpha: this.doms.biomesAlpha.valueAsNumber };\n  }\n  private splat3Alpha() {\n    return { splat3Alpha: this.doms.splat3Alpha.valueAsNumber };\n  }\n  private splat4Alpha() {\n    return { splat4Alpha: this.doms.splat4Alpha.valueAsNumber };\n  }\n  private radAlpha() {\n    return { radAlpha: this.doms.radAlpha.valueAsNumber };\n  }\n  private signSize() {\n    return { signSize: this.doms.signSize.valueAsNumber };\n  }\n  private signAlpha() {\n    return { signAlpha: this.doms.signAlpha.valueAsNumber };\n  }\n  private brightness() {\n    return { brightness: `${this.doms.brightness.valueAsNumber}%` };\n  }\n  private scale() {\n    return { scale: this.doms.scale.valueAsNumber };\n  }\n}\n\nfunction isTransferable(v: unknown): v is ImageBitmap | OffscreenCanvas {\n  return v instanceof ImageBitmap || v instanceof OffscreenCanvas;\n}\n\nfunction isStoreTarget(e: Entry<MapRendererInMessage>): e is [keyof typeof FIELDNAME_STORAGENAME_MAP, ImageBitmap] {\n  return e[0] in FIELDNAME_STORAGENAME_MAP;\n}\n","import { MapObject, MapStorage } from \"../lib/map-storage\";\nimport { removeAllChildren, requireNonnull } from \"../lib/utils\";\n\ntype Doms = {\n  select: HTMLSelectElement;\n  create: HTMLButtonElement;\n  delete: HTMLButtonElement;\n  mapName: HTMLInputElement;\n};\n\nexport class MapSelector {\n  private storage: MapStorage;\n  private doms: Doms;\n  private initPromise: Promise<void>;\n\n  constructor(doms: Doms, storage: MapStorage) {\n    this.doms = doms;\n    this.storage = storage;\n    this.initPromise = this.init();\n  }\n\n  private get selectedOption() {\n    return requireNonnull(this.doms.select.selectedOptions)[0];\n  }\n\n  private get selectedOptionMapId() {\n    return parseInt(this.selectedOption.dataset.mapId as string);\n  }\n\n  private async init(): Promise<void> {\n    MapStorage.addListener(async (mapId) => this.buildOptions(mapId));\n    await this.changeMap(await this.storage.currentId(), true);\n\n    this.doms.mapName.addEventListener(\"input\", () => {\n      const mapId = this.selectedOptionMapId;\n      const name = this.doms.mapName.value;\n      this.doms.select.selectedOptions[0].textContent = `${mapId}. ${name}`;\n      this.storage.put(\"maps\", name);\n    });\n    this.doms.select.addEventListener(\"input\", () => this.changeMap(this.selectedOptionMapId));\n    this.doms.create.addEventListener(\"click\", () => this.create());\n    this.doms.delete.addEventListener(\"click\", () => this.deleteMap());\n  }\n\n  private async buildOptions(mapId: number) {\n    const maps = await this.storage.listMaps();\n    const df = new DocumentFragment();\n    for (const m of maps) df.appendChild(buildOptionElement(m));\n    removeAllChildren(this.doms.select);\n    this.doms.select.appendChild(df);\n    this.selectOptionByMapId(mapId);\n  }\n\n  private async create() {\n    this.doms.create.disabled = true;\n    console.log(\"Create Map\");\n    const map = await this.storage.createMap();\n    this.doms.select.appendChild(buildOptionElement(map));\n    await this.changeMap(map.id);\n    this.doms.create.disabled = false;\n  }\n\n  private async deleteMap() {\n    this.doms.delete.disabled = true;\n    const mapId = this.selectedOptionMapId;\n\n    console.log(\"Delete Map\", mapId);\n    if (this.doms.select.options.length <= 1) {\n      console.log(\"Reject delete\");\n      return;\n    }\n\n    this.doms.select.removeChild(this.selectedOption);\n    await this.storage.deleteMap(mapId);\n    await this.changeMap(this.selectedOptionMapId);\n    this.doms.delete.disabled = this.doms.select.options.length <= 1;\n  }\n\n  private async changeMap(mapId: number, isInit = false) {\n    if (!isInit) await this.initPromise;\n    console.time(\"Change map\");\n    await this.storage.changeMap(mapId);\n    console.timeEnd(\"Change map\");\n    const map = requireNonnull(await this.storage.getCurrent(\"maps\"));\n    this.selectOptionByMapId(map.id);\n    this.doms.mapName.value = map.name;\n  }\n\n  private selectOptionByMapId(mapId: number) {\n    this.doms.select.selectedIndex = Array.from(this.doms.select.options).findIndex((o) => parseInt(o.dataset.mapId as string) === mapId);\n  }\n\n  private disableDoms(isDisabled: boolean) {\n    Object.values(this.doms).forEach((d) => (d.disabled = isDisabled));\n  }\n}\n\nfunction buildOptionElement(map: MapObject) {\n  const e = document.createElement(\"option\");\n  e.dataset.mapId = requireNonnull(map.id).toString();\n  e.textContent = `${map.id}. ${map.name}`;\n  return e;\n}\n","import { formatCoords } from \"../lib/utils\";\n\ninterface Doms {\n  canvas: HTMLCanvasElement;\n  output: HTMLElement;\n  resetMarker: HTMLButtonElement;\n}\n\nexport class MarkerHandler {\n  mapSize: RectSize = { width: 0, height: 0 };\n  elevationFunction: (coods: Coords, width: number) => number | null;\n  doms: Doms;\n  listeners: ((c: Coords | null) => Promise<void>)[] = [];\n\n  constructor(doms: Doms, elevationFunction: (coords: Coords, width: number) => number | null) {\n    this.elevationFunction = elevationFunction;\n    this.doms = doms;\n\n    doms.canvas.addEventListener(\"click\", (e) => {\n      updateMarker(this, e);\n      const markCoords = {\n        x: Math.round((e.offsetX * this.mapSize.width) / doms.canvas.width - this.mapSize.width / 2),\n        z: -Math.round((e.offsetY * this.mapSize.height) / doms.canvas.height - this.mapSize.height / 2),\n      };\n      this.listeners.forEach((fn) => fn(markCoords));\n    });\n    doms.resetMarker.addEventListener(\"click\", () => {\n      updateMarker(this);\n      this.listeners.forEach((fn) => fn(null));\n    });\n  }\n}\n\nfunction updateMarker(self: MarkerHandler, event: MouseEvent | null = null) {\n  self.doms.output.textContent = formatCoords(self.mapSize, self.doms.canvas, self.elevationFunction, event);\n}\n","import { PrefabsFilterInMessage } from \"../worker/prefabs-filter\";\nimport { MapStorage } from \"../lib/map-storage\";\nimport { PrefabUpdate } from \"../lib/prefabs\";\n\ninterface Doms {\n  status: HTMLElement;\n  prefabFilter: HTMLInputElement;\n  blockFilter: HTMLInputElement;\n}\n\ndeclare class PrefabsFilterWorker extends Worker {\n  postMessage(message: PrefabsFilterInMessage): void;\n}\n\nexport class PrefabsHandler {\n  doms: Doms;\n  worker: PrefabsFilterWorker;\n  storage: MapStorage;\n  listeners: ((prefabs: HighlightedPrefab[]) => Promise<void>)[] = [];\n\n  constructor(doms: Doms, worker: PrefabsFilterWorker, storage: MapStorage) {\n    this.doms = doms;\n    this.worker = worker;\n    this.storage = storage;\n\n    MapStorage.addListener(async () => {\n      const o = await storage.getCurrent(\"prefabs\");\n      worker.postMessage({ all: o?.data ?? [] });\n    });\n    worker.addEventListener(\"message\", (event: MessageEvent<PrefabUpdate>) => {\n      const { prefabs, status } = event.data;\n      this.listeners.map((fn) => fn(prefabs));\n      doms.status.textContent = status;\n    });\n    [\"input\", \"focus\"].forEach((eventName) => {\n      doms.prefabFilter.addEventListener(eventName, async () => {\n        worker.postMessage({ prefabsFilterString: doms.prefabFilter.value });\n        document.body.dataset.activeFilter = \"prefab\";\n      });\n      doms.blockFilter.addEventListener(eventName, async () => {\n        worker.postMessage({ blocksFilterString: doms.blockFilter.value });\n        document.body.dataset.activeFilter = \"block\";\n      });\n    });\n  }\n\n  async handle(blob: { text(): Promise<string> }): Promise<void> {\n    const prefabs = parse(await blob.text());\n    await this.storage.put(\"prefabs\", prefabs);\n    this.worker.postMessage({ all: prefabs });\n  }\n\n  set marker(markCoords: Coords | null) {\n    this.worker.postMessage({ markCoords });\n  }\n}\n\nfunction parse(xml: string): Prefab[] {\n  const dom = new DOMParser().parseFromString(xml, \"text/xml\");\n  return Array.from(dom.getElementsByTagName(\"decoration\")).flatMap((e) => {\n    const position = e.getAttribute(\"position\")?.split(\",\");\n    if (!position || position.length !== 3) return [];\n    const name = e.getAttribute(\"name\");\n    if (!name) return [];\n    return {\n      name,\n      x: parseInt(position[0]),\n      z: parseInt(position[2]),\n    };\n  });\n}\n","import { requireNonnull } from \"../lib/utils\";\n\nconst SAMPLE_WORLD_FILES = [\n  \"biomes.png\",\n  \"splat3_processed.png\",\n  \"splat4_processed.png\",\n  \"radiation.png\",\n  \"prefabs.xml\",\n  \"dtm.png\",\n  \"GenerationInfo.txt\",\n];\n\nexport class SampleWorldLoader {\n  private listeners: ((file: File) => Promise<unknown> | unknown)[] = [];\n\n  constructor() {\n    for (const button of Array.from(document.querySelectorAll(\"button[data-sample-dir]\"))) {\n      console.log(\"Sample world button: \", button);\n      if (button instanceof HTMLButtonElement) button.addEventListener(\"click\", async () => this.loadSampleWorld(button));\n    }\n  }\n\n  addListenr(fn: (file: File) => Promise<unknown> | unknown): void {\n    this.listeners.push(fn);\n  }\n\n  private async loadSampleWorld(button: HTMLButtonElement) {\n    button.disabled = true;\n    const dir = requireNonnull(button.dataset.sampleDir);\n    await Promise.all(\n      SAMPLE_WORLD_FILES.flatMap(async (name) => {\n        const file = await fetchAsFile(`${dir}/${name}`);\n        return this.listeners.map((fn) => fn(file));\n      })\n    );\n    button.disabled = false;\n  }\n}\n\nasync function fetchAsFile(uri: string): Promise<File> {\n  console.time(`fetchAsFile: ${uri}`);\n  const res = await fetch(uri);\n  const blob = await res.blob();\n  const file = new File([blob], basename(uri), { type: blob.type });\n  console.timeEnd(`fetchAsFile: ${uri}`);\n  return file;\n}\n\nfunction basename(path: string) {\n  return path.substring(path.lastIndexOf(\"/\") + 1);\n}\n","import { Png, PngParser } from \"./png-parser\";\n\nexport class ImageBitmapLoader {\n  private pngParser: PngParser;\n\n  constructor(workerFactory: () => Worker) {\n    this.pngParser = new PngParser(workerFactory);\n  }\n\n  async loadSplat(file: File): Promise<ImageBitmap> {\n    return renderSplat(await this.pngParser.parse(file));\n  }\n\n  async loadRad(file: File): Promise<ImageBitmap> {\n    return renderRad(await this.pngParser.parse(file));\n  }\n}\n\n// splatX.png should convert the pixels which:\n//   * black to transparent\n//   * other to non-transparent\nfunction renderSplat(pngjs: Png) {\n  return render(pngjs, (indata, out) => {\n    for (let i = 0; i < indata.length; i += 4) {\n      out[i] = indata[i];\n      out[i + 1] = indata[i + 1];\n      out[i + 2] = indata[i + 2];\n      if (indata[i] === 0 && indata[i + 1] === 0 && indata[i + 2] === 0) {\n        out[i + 3] = 0;\n      } else {\n        out[i + 3] = 255;\n      }\n    }\n  });\n}\n\n// radioation.png should convert the pixels which:\n//   * red to non-transparent\n//   * other to transparent\nfunction renderRad(pngjs: Png) {\n  return render(pngjs, (indata, out) => {\n    for (let i = 0; i < indata.length; i += 4) {\n      out[i] = indata[i];\n      out[i + 1] = 0;\n      out[i + 2] = 0;\n      if (indata[i] !== 0) {\n        out[i + 3] = 255;\n      } else {\n        out[i + 3] = 0;\n      }\n    }\n  });\n}\n\ntype ConvertImageBitmap = (indata: Uint8Array, outData: Uint8ClampedArray) => void;\n\nfunction render({ data, height, width }: Png, copyFunction: ConvertImageBitmap) {\n  const canvas = new OffscreenCanvas(width, height);\n  const context = canvas.getContext(\"2d\");\n  if (!context) throw Error(\"Unexpected error: Canvas context not found\");\n  const imageData = context.getImageData(0, 0, width, height);\n  copyFunction(new Uint8Array(data), imageData.data);\n  context.putImageData(imageData, 0, 0);\n  return createImageBitmap(canvas);\n}\n","export function init(): void {\n  for (const button of Array.from(document.querySelectorAll(\"[data-copy-for]\"))) {\n    if (!(button instanceof HTMLButtonElement)) continue;\n\n    const target = document.getElementById(button.dataset.copyFor as string);\n    if (!target) continue;\n\n    button.addEventListener(\"click\", () => copy(target, button));\n  }\n}\n\nconst DEFAULT_SUCCESS_MESSAGE = \"Copied!\";\nconst DEFAULT_FAILURE_MESSAGE = \"⚠Failure\";\n\nfunction copy(target: HTMLElement, button: HTMLButtonElement) {\n  selectNode(target);\n\n  const commandResult = document.execCommand(\"copy\");\n  if (commandResult) {\n    console.log(\"Copy Success\", target);\n    button.dataset.message = button.dataset.successMessage ?? DEFAULT_SUCCESS_MESSAGE;\n  } else {\n    console.log(\"Copy Failure\", target);\n    button.dataset.message = button.dataset.failureMessage ?? DEFAULT_FAILURE_MESSAGE;\n  }\n\n  console.log(commandResult);\n}\n\nfunction selectNode(target: HTMLElement) {\n  const selection = getSelection();\n  selection?.removeAllRanges();\n\n  const range = document.createRange();\n  range.selectNodeContents(target);\n  selection?.addRange(range);\n}\n","import { requireNonnull, waitAnimationFrame } from \"./utils\";\n\nexport class DelayedRenderer<T> {\n  _iterator: Iterator<T[]> = ([] as T[][])[Symbol.iterator]();\n  appendee: HTMLElement;\n  scrollableWrapper: HTMLElement;\n  itemRenderer: (item: T) => Node;\n  scrollCallback = (): void => {\n    this.renderAll();\n  };\n\n  constructor(scrollableWrapper: HTMLElement, appendee: HTMLElement, itemRenderer: (item: T) => Node) {\n    if (!scrollableWrapper.contains(appendee)) throw Error(\"Wrapper element should contain appendee element\");\n    appendee.innerHTML = \"\";\n    this.appendee = appendee;\n    this.scrollableWrapper = scrollableWrapper;\n    this.itemRenderer = itemRenderer;\n  }\n\n  set iterator(iteratorOrIterable: Iterator<T> | Iterable<T>) {\n    if (\"next\" in iteratorOrIterable) {\n      this._iterator = chunkIterator(iteratorOrIterable);\n    } else {\n      this._iterator = chunkIterator(iteratorOrIterable[Symbol.iterator]());\n    }\n    this.appendee.innerHTML = \"\";\n    this.scrollableWrapper.removeEventListener(\"scroll\", this.scrollCallback);\n\n    // Require a delay because flashing childlen like the above fires \"scroll\" events.\n    requestAnimationFrame(() => {\n      this.scrollableWrapper.removeEventListener(\"scroll\", this.scrollCallback);\n      this.scrollableWrapper.addEventListener(\"scroll\", this.scrollCallback, { once: true });\n      renderUntil(this, () => isFill(this.scrollableWrapper));\n    });\n  }\n\n  async renderAll(): Promise<void> {\n    await renderUntil(this, () => false);\n  }\n}\n\nasync function renderUntil<T>(self: DelayedRenderer<T>, stopPredicate: () => boolean) {\n  while (!stopPredicate()) {\n    const result = self._iterator.next();\n    if (isReturn(result)) break;\n    const df = new DocumentFragment();\n    result.value.forEach((i) => df.appendChild(self.itemRenderer(i)));\n    self.appendee.appendChild(df);\n    await waitAnimationFrame();\n  }\n}\n\nfunction isFill(wrapper: HTMLElement) {\n  return wrapper.offsetHeight + 100 < wrapper.scrollHeight;\n}\n\nfunction chunkIterator<T, TReturn, TNext>(origin: Iterator<T, TReturn, TNext>, chunkSize = 10) {\n  let returnResult: IteratorReturnResult<TReturn> | null = null;\n  const chunkIter: Iterator<T[], TReturn, TNext> = {\n    next(...args: [] | [TNext]): IteratorResult<T[], TReturn> {\n      if (returnResult) return returnResult;\n      const chunk = Array<T>(chunkSize);\n      for (let i = 0; i < chunkSize; i++) {\n        const result = origin.next(...args);\n        if (isReturn(result)) {\n          returnResult = result;\n        } else {\n          chunk[i] = result.value;\n        }\n      }\n      return {\n        done: false,\n        value: chunk,\n      };\n    },\n  };\n  if (\"throw\" in origin) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    chunkIter.throw = (e?: any) => {\n      const r = requireNonnull(origin.throw)(e);\n      if (isReturn(r)) return r;\n      else return { done: r.done, value: [r.value] };\n    };\n  }\n  if (\"return\" in origin) {\n    chunkIter.return = (treturn?: TReturn) => {\n      const r = requireNonnull(origin.return)(treturn);\n      if (isReturn(r)) return r;\n      else return { done: r.done, value: [r.value] };\n    };\n  }\n  return chunkIter;\n}\n\nfunction isReturn<T, TReturn>(r: IteratorResult<T, TReturn>): r is IteratorReturnResult<TReturn> {\n  return Boolean(r.done);\n}\n","import { DBSchema, IDBPDatabase, openDB } from \"idb\";\nimport { requireNonnull } from \"./utils\";\n\nconst DB_NAME = \"7dtd-map\";\nconst DB_VERSION = 2;\nconst DEFAULT_WORLD_NAME = \"New-World\";\n\ntype Db = IDBPDatabase<DbSchema>;\ninterface DbSchema extends DBSchema {\n  maps: {\n    value: MapObject;\n    key: number;\n  };\n  largeObjects: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value: LargeObject<any>;\n    key: [number, string];\n  };\n  selectedMap: {\n    value: { id: number; mapId: number };\n    key: number;\n  };\n}\n\nexport interface MapObject {\n  id: number;\n  name: string;\n}\n\nexport const LARGE_OBJECT_TYPES = [\n  \"biomes\",\n  \"splat3\",\n  \"splat4\",\n  \"rad\",\n  \"elevations\",\n  \"subElevations\",\n  \"prefabs\",\n  \"generationInfo\",\n] as const;\ntype LargeObjectType = typeof LARGE_OBJECT_TYPES[number];\nexport interface LargeObjects {\n  biomes: ImageBitmap;\n  splat3: ImageBitmap;\n  splat4: ImageBitmap;\n  rad: ImageBitmap;\n  elevations: Uint8Array;\n  subElevations: Uint8Array;\n  prefabs: Prefab[];\n  generationInfo: string;\n}\nexport interface LargeObject<T extends LargeObjectType> {\n  mapId: number;\n  type: T;\n  data: LargeObjects[T];\n}\n\nconst MAP_PROPERTY_TYPES = [\"maps\", ...LARGE_OBJECT_TYPES] as const;\ntype MapPropertyType = typeof MAP_PROPERTY_TYPES[number];\ntype MapPropertyValue<T extends MapPropertyType> = T extends LargeObjectType ? LargeObject<T> : DbSchema[\"maps\"][\"value\"];\ntype MapPropertyRawValue<T extends MapPropertyType> = T extends LargeObjectType\n  ? LargeObject<T>[\"data\"]\n  : DbSchema[\"maps\"][\"value\"][\"name\"];\n\nfunction dbUpgrade(db: Db, oldVersion: number, newVersion: number) {\n  for (let version = oldVersion + 1; version <= newVersion; version++) {\n    if (version === 1) {\n      db.createObjectStore(\"maps\", { keyPath: \"id\", autoIncrement: true });\n      db.createObjectStore(\"largeObjects\", { keyPath: [\"mapId\", \"type\"] });\n    }\n    if (version === 2) {\n      db.createObjectStore(\"selectedMap\", { keyPath: \"id\" });\n    }\n  }\n}\n\nconst CHANGE_LISTENERS: ((mapId: number, instance: MapStorage) => Promise<unknown> | unknown)[] = [\n  (mapId) => console.log(\"MapStorage change current map\", mapId),\n];\n\nexport class MapStorage {\n  _db?: Db;\n\n  async put<Type extends MapPropertyType>(type: Type, data: MapPropertyRawValue<Type>): Promise<void> {\n    const db = await getDb(this);\n    const mapId = await currentId(db);\n    if (isLargeObjectType(type)) {\n      await db.put(\"largeObjects\", { mapId, type, data });\n    } else if (type === \"maps\") {\n      await db.put(\"maps\", { id: mapId, name: data as MapPropertyRawValue<\"maps\"> });\n    } else {\n      throw Error(`Unreachable code: type=${type}`);\n    }\n  }\n\n  async getCurrent<Type extends MapPropertyType>(type: Type): Promise<MapPropertyValue<Type> | undefined> {\n    const db = await getDb(this);\n    const mapId = await currentId(db);\n    if (isLargeObjectType(type)) {\n      return (await db.get(\"largeObjects\", [mapId, type])) as MapPropertyValue<Type> | undefined;\n    } else if (type === \"maps\") {\n      return requireNonnull(await db.get(\"maps\", mapId), () => `Unexpected state: ${mapId}`) as MapPropertyValue<Type> | undefined;\n    } else {\n      throw Error(`Unreachable code: ${type}`);\n    }\n  }\n\n  async listMaps(): Promise<MapObject[]> {\n    const db = await getDb(this);\n    return db.getAll(\"maps\");\n  }\n\n  async createMap(name = DEFAULT_WORLD_NAME): Promise<MapObject> {\n    const db = await getDb(this);\n    return await createMap(db, name);\n  }\n\n  async deleteMap(mapIdOrUndefined?: number): Promise<void> {\n    const db = await getDb(this);\n    const mapId = mapIdOrUndefined ?? (await currentId(db));\n    await Promise.all([db.delete(\"maps\", mapId), ...LARGE_OBJECT_TYPES.map((t) => db.delete(\"largeObjects\", [mapId, t]))]);\n  }\n\n  async changeMap(mapId: number): Promise<void> {\n    const db = await getDb(this);\n    await Promise.all([changeMap(db, mapId), ...CHANGE_LISTENERS.map((fn) => fn(mapId, this))]);\n  }\n\n  async currentId(): Promise<number> {\n    return currentId(await getDb(this));\n  }\n\n  static addListener(listener: (mapId: number, self: MapStorage) => Promise<void>): void {\n    CHANGE_LISTENERS.push(listener);\n  }\n}\n\nasync function createMap(db: Db, name: string) {\n  const id = await db.put(\"maps\", { name } as MapObject);\n  return { id, name };\n}\n\nasync function getDb(self: MapStorage) {\n  if (!self._db) {\n    self._db = await openDB<DbSchema>(DB_NAME, DB_VERSION, { upgrade: dbUpgrade });\n  }\n  return self._db;\n}\n\nfunction isLargeObjectType(type: MapPropertyType): type is LargeObjectType {\n  return (LARGE_OBJECT_TYPES as readonly string[]).includes(type);\n}\n\nasync function changeMap(db: Db, mapId: number) {\n  await db.put(\"selectedMap\", { id: 0, mapId });\n}\n\nasync function currentId(db: Db): Promise<number> {\n  const map = await db.get(\"selectedMap\", 0);\n  if (map) {\n    return map.mapId;\n  }\n\n  const all = await db.getAll(\"maps\");\n  if (all[0]) {\n    await changeMap(db, all[0].id);\n    return currentId(db);\n  }\n\n  const newMap = await createMap(db, DEFAULT_WORLD_NAME);\n  await changeMap(db, newMap.id);\n  return currentId(db);\n}\n","import * as pngjsWorker from \"../worker/pngjs\";\n\nexport interface Png {\n  width: number;\n  height: number;\n  data: ArrayBuffer;\n}\n\nexport class PngParser {\n  private workerFactory: () => Worker;\n\n  constructor(workerFactory: () => Worker) {\n    this.workerFactory = workerFactory;\n  }\n\n  async parse(blob: Blob): Promise<Png> {\n    const worker = this.workerFactory();\n    const data = await blob.arrayBuffer();\n    worker.postMessage(data, [data]);\n    const event: MessageEvent<pngjsWorker.OutMessage> = await new Promise((resolve, reject) => {\n      worker.onmessage = resolve;\n      worker.onerror = reject;\n      worker.onmessageerror = reject;\n    });\n    worker.terminate();\n    return event.data;\n  }\n}\n","import { component, requireNonnull } from \"./utils\";\n\nexport function init(): void {\n  for (const button of Array.from(document.querySelectorAll(\"[data-input-for]\"))) {\n    if (!(button instanceof HTMLElement)) continue;\n    button.addEventListener(\"click\", () => {\n      const target = component(button.dataset.inputFor, HTMLInputElement);\n      target.value = requireNonnull(button.dataset.inputText ?? button.textContent);\n      target.dispatchEvent(new Event(\"input\"));\n    });\n  }\n}\n","import { waitAnimationFrame } from \"./utils\";\n\nexport default function throttledInvoker(asyncFunc: () => Promise<void>): () => Promise<void> {\n  let updateRequest = false;\n  let workerPromise: Promise<void> | null = null;\n  return async () => {\n    updateRequest = true;\n\n    if (workerPromise) {\n      return;\n    }\n\n    workerPromise = (async () => {\n      while (updateRequest) {\n        updateRequest = false;\n        await asyncFunc();\n        await waitAnimationFrame();\n      }\n      workerPromise = null;\n    })();\n  };\n}\n","export function requireNonnull<T>(t: T | undefined | null, message = () => `Unexpected state: ${t}`): T {\n  if (t) return t;\n  else throw Error(message());\n}\n\nexport function requireType<T>(o: unknown, t: { new (...a: unknown[]): T }, message = () => `Unexpected type: ${o}`): T {\n  if (o instanceof t) return o;\n  throw Error(message());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | null | undefined, t?: { new (...a: unknown[]): T }): T {\n  const e = requireNonnull(\n    document.getElementById(requireNonnull(id, () => `Element ID must not null: ${id}`)),\n    () => `Element not found: #${id}`\n  );\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance(d: number): string {\n  if (d < 1000) {\n    return `${d}m`;\n  }\n  return `${(d / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport function formatCoords(\n  map: RectSize,\n  canvas: RectSize,\n  elevation: (coods: Coords, width: number) => number | null,\n  event: EventOffsets | null\n): string {\n  if (!event) return \"E/W: -, N/S: -, Elev: -\";\n\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * map.width) / canvas.width;\n  const gz = (event.offsetY * map.height) / canvas.height;\n  if (gx < 0 || gx >= map.width || gz < 0 || gz >= map.height) {\n    return \"E/W: -, N/S: -, Elev: -\";\n  }\n\n  // in-game coords (center offset)\n  const x = Math.round(gx - map.width / 2);\n  const z = Math.round(map.height / 2 - gz);\n  const e = elevation({ x: Math.round(gx), z: Math.round(gz) }, map.width) ?? \"-\";\n  return `E/W: ${x}, N/S: ${z}, Elev: ${e}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(341);\n"],"sourceRoot":""}