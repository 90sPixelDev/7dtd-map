{"version":3,"file":"worker/map-renderer.js","mappings":"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","sources":["webpack://7dtd-map/./src/lib/image-bitmap-holder.ts","webpack://7dtd-map/./src/lib/map-renderer.ts","webpack://7dtd-map/./src/lib/throttled-invoker.ts","webpack://7dtd-map/./src/lib/utils.ts","webpack://7dtd-map/./src/worker/map-renderer.ts","webpack://7dtd-map/webpack/bootstrap","webpack://7dtd-map/webpack/startup"],"sourcesContent":["import { imageBitmapToPngBlob, requireNonnull } from \"./utils\";\n\nconst IMG_AGE_MSEC = 10000;\n\nexport class ImageBitmapHolder {\n  private label;\n  _png: PngBlob | Promise<PngBlob>;\n  private img?: ImageBitmap | null;\n  private fallbackPromise: Promise<ImageBitmap> | null = null;\n  private lastAccessAt = 0;\n  private imgAge;\n\n  constructor(label: string, original: PngBlob | ImageBitmap, imgAge = IMG_AGE_MSEC) {\n    this.label = label;\n    if (isPngBlob(original)) {\n      this._png = original;\n    } else {\n      this._png = imageBitmapToPngBlob(original);\n      this.setImg(original);\n    }\n    this.imgAge = imgAge;\n  }\n\n  async get(): Promise<ImageBitmap> {\n    this.lastAccessAt = Date.now();\n    return this.img ?? this.fallbackPromise ?? this.getFallback();\n  }\n\n  private async getFallback() {\n    this.fallbackPromise = this.getImageBitmap();\n    return this.fallbackPromise;\n  }\n\n  private async getImageBitmap() {\n    console.debug(\"Fallback\", this.label);\n    const img = await createImageBitmap(await this._png);\n    this.setImg(img);\n    this.fallbackPromise = null;\n    return img;\n  }\n\n  private setImg(img: ImageBitmap) {\n    this.img = img;\n    setTimeout(() => this.expireImage(), this.imgAge);\n  }\n\n  private expireImage() {\n    if (Date.now() - this.lastAccessAt > this.imgAge) {\n      console.debug(\"Expire\", this.label);\n      requireNonnull(this.img).close();\n      this.img = null;\n    } else {\n      setTimeout(() => this.expireImage(), this.imgAge);\n    }\n  }\n}\n\nfunction isPngBlob(o: PngBlob | ImageBitmap): o is PngBlob {\n  return o instanceof Blob;\n}\n","import { ImageBitmapHolder } from \"./image-bitmap-holder\";\nimport { throttledInvoker } from \"./throttled-invoker\";\nimport { gameMapSize } from \"./utils\";\n\n// const SIGN_CHAR = \"‚úò\";\nconst MARK_CHAR = \"üö©Ô∏è\";\n\nexport default class MapRenderer {\n  brightness = \"100%\";\n  markerCoords: GameCoords | null = null;\n  scale = 0.1;\n  showPrefabs = true;\n  prefabs: HighlightedPrefab[] = [];\n  signSize = 200;\n  markerSize = 100;\n  signAlpha = 1;\n  biomesAlpha = 1;\n  splat3Alpha = 1;\n  splat4Alpha = 1;\n  radAlpha = 1;\n\n  canvas: OffscreenCanvas;\n\n  update = throttledInvoker(async () => {\n    console.time(\"MapUpdate\");\n    await this.updateImmediately();\n    console.timeEnd(\"MapUpdate\");\n  });\n\n  private _biomesImg: ImageBitmapHolder | null = null;\n  private _splat3Img: ImageBitmapHolder | null = null;\n  private _splat4Img: ImageBitmapHolder | null = null;\n  private _radImg: ImageBitmapHolder | null = null;\n  private fontFace: FontFace;\n\n  constructor(canvas: OffscreenCanvas, fontFace: FontFace) {\n    this.canvas = canvas;\n    this.fontFace = fontFace;\n  }\n\n  set biomesImg(img: ImageBitmap | PngBlob | null) {\n    this._biomesImg = img ? new ImageBitmapHolder(\"biomes\", img) : null;\n  }\n  set splat3Img(img: ImageBitmap | PngBlob | null) {\n    this._splat3Img = img ? new ImageBitmapHolder(\"splat3\", img) : null;\n  }\n  set splat4Img(img: ImageBitmap | PngBlob | null) {\n    this._splat4Img = img ? new ImageBitmapHolder(\"splat4\", img) : null;\n  }\n  set radImg(img: ImageBitmap | PngBlob | null) {\n    this._radImg = img ? new ImageBitmapHolder(\"rad\", img) : null;\n  }\n\n  async size(): Promise<GameMapSize> {\n    const rects = await Promise.all([this._biomesImg?.get(), this._splat3Img?.get(), this._splat4Img?.get()]);\n    return gameMapSize({\n      width: Math.max(...rects.map((r) => r?.width ?? 0)),\n      height: Math.max(...rects.map((r) => r?.height ?? 0)),\n    });\n  }\n\n  private isBlank(): boolean {\n    return !this._biomesImg && !this._splat3Img && !this._splat4Img;\n  }\n\n  async updateImmediately(): Promise<void> {\n    if (this.isBlank()) {\n      this.canvas.width = 1;\n      this.canvas.height = 1;\n      return;\n    }\n\n    const { width, height } = await this.size();\n\n    this.canvas.width = width * this.scale;\n    this.canvas.height = height * this.scale;\n\n    const context = this.canvas.getContext(\"2d\");\n    if (!context) return;\n    context.scale(this.scale, this.scale);\n    context.filter = `brightness(${this.brightness})`;\n\n    if (this._biomesImg && this.biomesAlpha !== 0) {\n      context.globalAlpha = this.biomesAlpha;\n      context.drawImage(await this._biomesImg.get(), 0, 0, width, height);\n    }\n    if (this._splat3Img && this.splat3Alpha !== 0) {\n      context.globalAlpha = this.splat3Alpha;\n      context.drawImage(await this._splat3Img.get(), 0, 0, width, height);\n    }\n    if (this._splat4Img && this.splat4Alpha !== 0) {\n      context.globalAlpha = this.splat4Alpha;\n      context.drawImage(await this._splat4Img.get(), 0, 0, width, height);\n    }\n\n    context.filter = \"none\";\n    if (this._radImg && this.radAlpha !== 0) {\n      context.globalAlpha = this.radAlpha;\n      context.imageSmoothingEnabled = false;\n      context.drawImage(await this._radImg.get(), 0, 0, width, height);\n      context.imageSmoothingEnabled = true;\n    }\n\n    context.globalAlpha = this.signAlpha;\n    if (this.showPrefabs) {\n      this.drawPrefabs(context, width, height);\n    }\n    if (this.markerCoords) {\n      this.drawMark(context, width, height);\n    }\n  }\n\n  private customizeSignByPrefabCategory(prefab: HighlightedPrefab) {\n    const pfName = prefab.name.toLocaleLowerCase();\n    if (pfName.includes(\"gas\")) {\n      const prefabInfo = { text: \"‚õΩ\", ctx: { fillStyle: \"red\", strokeStyle: \"#5E1616\" } };\n      return prefabInfo;\n    } else if (pfName.includes(\"trader\")) {\n      const prefabInfo = { text: \"üí∞\", ctx: { fillStyle: \"yellow\", strokeStyle: \"#A47D00\" } };\n      return prefabInfo;\n    } else if (pfName.includes(\"sham\")) {\n      const prefabInfo = { text: \"ü•´\", ctx: { fillStyle: \"yellow\", strokeStyle: \"white\" } };\n      return prefabInfo;\n    } else if (pfName.includes(\"farm\") || pfName.includes(\"barn\")) {\n      const prefabInfo = { text: \"üöú\", ctx: { fillStyle: \"orange\", strokeStyle: \"#704D17\" } };\n      return prefabInfo;\n    } else if (pfName.includes(\"survivor\")) {\n      const prefabInfo = { text: \"üë§\", ctx: { fillStyle: \"purple\", strokeStyle: \"#17072C\" } };\n      return prefabInfo;\n    } else if (pfName.includes(\"skyscraper\")) {\n      const prefabInfo = { text: \"üè¢\", ctx: { fillStyle: \"#8FA5CF\", strokeStyle: \"#1C2F51\" } };\n      return prefabInfo;\n    } else if (pfName.includes(\"hospital\") || pfName.includes(\"clinic\") || pfName.includes(\"pharmacy\")) {\n      const prefabInfo = { text: \"üíä\", ctx: { fillStyle: \"#2671FF\", strokeStyle: \"white\" } };\n      return prefabInfo;\n    } else if (pfName.includes(\"book\")) {\n      const prefabInfo = { text: \"üìñ\", ctx: { fillStyle: \"#44F3FF\", strokeStyle: \"#147178\" } };\n      return prefabInfo;\n    } else {\n      const prefabInfo = { text: \"‚ùå\", ctx: { fillStyle: \"white\", strokeStyle: \"#000\" } };\n      return prefabInfo;\n    }\n  }\n\n  private drawPrefabs(ctx: OffscreenCanvasRenderingContext2D, width: number, height: number) {\n    const offsetX = width / 2;\n    const offsetY = height / 2;\n\n    const charOffsetX = Math.round(this.signSize * 0.01);\n    const charOffsetY = Math.round(this.signSize * 0.05);\n\n    // Inverted iteration to overwrite signs by higher order prefabs\n    for (let i = this.prefabs.length - 1; i >= 0; i -= 1) {\n      const prefab = this.prefabs[i];\n      const x = offsetX + prefab.x + charOffsetX;\n      // prefab vertical positions are inverted for canvas coodinates\n      const z = offsetY - prefab.z + charOffsetY;\n      // putText(ctx, { text: SIGN_CHAR, x, z, size: this.signSize });\n\n      const prefabInfo = this.customizeSignByPrefabCategory(prefab);\n\n      ctx.font = `${this.signSize}px ${this.fontFace?.family ?? \"\"}`;\n      ctx.fillStyle = prefabInfo.ctx.fillStyle;\n      ctx.strokeStyle = prefabInfo.ctx.strokeStyle;\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      putText(ctx, { text: prefabInfo.text, x, z, size: this.signSize });\n    }\n  }\n\n  private drawMark(ctx: OffscreenCanvasRenderingContext2D, width: number, height: number) {\n    if (!this.markerCoords) return;\n\n    ctx.font = `${this.markerSize}px ${this.fontFace?.family ?? \"\"}`;\n    ctx.fillStyle = \"red\";\n    ctx.shadowOffsetX = 3;\n    ctx.shadowOffsetY = -2;\n    ctx.shadowBlur = 5;\n    ctx.strokeStyle = \"#830000\";\n    ctx.shadowColor = \"rgba(75,75,75,0.75)\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"alphabetic\";\n\n    const offsetX = width / 2;\n    const offsetY = height / 2;\n    const charOffsetX = -1 * Math.round(this.markerSize * 0.32);\n    const charOffsetY = -1 * Math.round(this.markerSize * 0.1);\n\n    const x = offsetX + this.markerCoords.x + charOffsetX;\n    const z = offsetY - this.markerCoords.z + charOffsetY;\n\n    putText(ctx, { text: MARK_CHAR, x, z, size: this.markerSize });\n    ctx.fillText(MARK_CHAR, x, z);\n  }\n}\n\ninterface MapSign {\n  text: string;\n  x: number;\n  z: number;\n  size: number;\n}\n\nfunction putText(ctx: OffscreenCanvasRenderingContext2D, { text, x, z, size }: MapSign) {\n  ctx.lineWidth = Math.round(size * 0.2);\n  // ctx.strokeStyle = \"rgba(0, 0, 0, 0.8)\";\n  ctx.strokeText(text, x, z);\n\n  ctx.lineWidth = Math.round(size * 0.1);\n  // ctx.strokeStyle = \"white\";\n  ctx.strokeText(text, x, z);\n\n  ctx.fillText(text, x, z);\n}\n","import { waitAnimationFrame } from \"./utils\";\n\nexport function throttledInvoker(asyncFunc: () => Promise<void> | void): () => Promise<void> {\n  const workerPromises: Promise<void>[] = [];\n  return () => {\n    switch (workerPromises.length) {\n      case 0: {\n        workerPromises.push(\n          (async () => {\n            await asyncFunc();\n            workerPromises.shift();\n          })()\n        );\n        return workerPromises[0];\n      }\n      case 1: {\n        const prev = workerPromises[0];\n        workerPromises.push(\n          (async () => {\n            await prev;\n            await waitAnimationFrame();\n            await asyncFunc();\n            workerPromises.shift();\n          })()\n        );\n        return workerPromises[1];\n      }\n      case 2:\n        return workerPromises[1];\n      default:\n        throw Error(`Unexpected state: promiceses=${workerPromises.length}`);\n    }\n  };\n}\n","export function requireNonnull<T>(t: T | undefined | null, message = () => `Unexpected state: ${t}`): T {\n  if (t != null) return t;\n  else throw Error(message());\n}\n\nexport function requireType<T>(o: unknown, t: { new (...a: unknown[]): T }, message = () => `Unexpected type: ${o}`): T {\n  if (o instanceof t) return o;\n  throw Error(message());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | null | undefined, t?: { new (...a: unknown[]): T }): T {\n  const e = requireNonnull(\n    document.getElementById(requireNonnull(id, () => `Element ID must not null: ${id}`)),\n    () => `Element not found: #${id}`\n  );\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance(d: number): string {\n  if (d < 1000) {\n    return `${d}m`;\n  }\n  return `${(d / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport function formatCoords(\n  map: GameMapSize,\n  canvas: HTMLCanvasElement,\n  elevation: (coods: GameCoords, mapSize: GameMapSize) => number | null,\n  event: EventOffsets | null\n): string {\n  if (!event) return \"E/W: -, N/S: -, Elev: -\";\n\n  const gameCoords = canvasEventToGameCoords(event, map, canvas);\n  if (gameCoords === null) {\n    return \"E/W: -, N/S: -, Elev: -\";\n  }\n\n  const y = elevation(gameCoords, map) ?? \"-\";\n  return `E/W: ${gameCoords.x}, N/S: ${gameCoords.z}, Elev: ${y}`;\n}\n// export function formatCoords(\n//   map: GameMapSize,\n//   canvas: HTMLCanvasElement,\n//   elevation: (coods: GameCoords, mapSize: GameMapSize) => number | null,\n//   event: EventOffsets | null\n// ): MapCoord {\n//   if (!event) return {\"-\", \"-\", \"-\"};\n\n//   const gameCoords = canvasEventToGameCoords(event, map, canvas);\n//   // if (gameCoords === null) {\n//   //   return \"E/W: -, N/S: -, Elev: -\";\n//   // }\n\n//   const y = elevation(gameCoords, map) ?? \"-\";\n//   return {gameCoords.x, gameCoords.z, y};\n// }\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n\nexport async function imageBitmapToPngBlob(img: ImageBitmap): Promise<PngBlob> {\n  const canvas = new OffscreenCanvas(img.height, img.width);\n  const context = requireNonnull(canvas.getContext(\"2d\"));\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  context.drawImage(img, 0, 0);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return (await canvas.convertToBlob({ type: \"image/png\" })) as PngBlob;\n}\n\nexport async function sleep(msec: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, msec));\n}\n\nexport function gameMapSize(s: { width: number; height: number }): GameMapSize {\n  return { type: \"game\", ...s };\n}\n\nexport function gameCoords(c: { x: number; z: number }): GameCoords {\n  return { type: \"game\", ...c };\n}\n\n/** Returns null if the event was fired out of the canvas */\nexport function canvasEventToGameCoords(event: EventOffsets, mapSize: GameMapSize, canvasSize: HTMLCanvasElement): GameCoords | null {\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * mapSize.width) / canvasSize.width;\n  const gz = (event.offsetY * mapSize.height) / canvasSize.height;\n  if (gx < 0 || gx >= mapSize.width || gz < 0 || gz >= mapSize.height) {\n    return null;\n  }\n\n  // in-game coords (center offset)\n  const x = gx - Math.floor(mapSize.width / 2);\n  const z = Math.floor(mapSize.height / 2) - gz;\n  return gameCoords({ x: Math.round(x), z: Math.round(z) });\n}\n\nexport function threePlaneSize(width: number, height: number): ThreePlaneSize {\n  return { type: \"threePlane\", width, height };\n}\n","import { FontFaceSet } from \"css-font-loading-module\";\nimport MapRenderer from \"../lib/map-renderer\";\n\ndeclare const fonts: FontFaceSet;\n\nexport type InMessage = Partial<\n  Pick<\n    MapRenderer,\n    | \"canvas\"\n    | \"biomesImg\"\n    | \"splat3Img\"\n    | \"splat4Img\"\n    | \"radImg\"\n    | \"biomesAlpha\"\n    | \"splat3Alpha\"\n    | \"splat4Alpha\"\n    | \"radAlpha\"\n    | \"showPrefabs\"\n    | \"brightness\"\n    | \"scale\"\n    | \"signSize\"\n    | \"signAlpha\"\n    | \"prefabs\"\n    | \"markerCoords\"\n  >\n>;\n\nexport interface OutMessage {\n  mapSize: GameMapSize;\n}\n\ndeclare function postMessage(message: OutMessage): void;\n\nconst FONT_FACE = new FontFace(\"Heebo\", \"url(../NotoEmoji-Regular.ttf)\");\n\nlet map: MapRenderer | null = null;\n\nFONT_FACE.load().then(() => {\n  fonts.add(FONT_FACE);\n  map?.update();\n});\n\nonmessage = async (event: MessageEvent<InMessage>) => {\n  const message = event.data;\n  console.debug(message);\n  if (!map) {\n    if (message.canvas) {\n      map = new MapRenderer(message.canvas, FONT_FACE);\n    } else {\n      throw Error(\"Unexpected state\");\n    }\n  }\n  await Object.assign(map, message).update();\n  postMessage({ mapSize: await map.size() });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(179);\n"],"names":["constructor","label","original","imgAge","fallbackPromise","lastAccessAt","this","Blob","_png","imageBitmapToPngBlob","setImg","async","Date","now","img","getFallback","getImageBitmap","console","debug","createImageBitmap","setTimeout","expireImage","requireNonnull","close","putText","ctx","text","x","z","size","lineWidth","Math","round","strokeText","fillText","canvas","fontFace","brightness","markerCoords","scale","showPrefabs","prefabs","signSize","markerSize","signAlpha","biomesAlpha","splat3Alpha","splat4Alpha","radAlpha","update","throttledInvoker","time","updateImmediately","timeEnd","_biomesImg","_splat3Img","_splat4Img","_radImg","biomesImg","ImageBitmapHolder","splat3Img","splat4Img","radImg","rects","Promise","all","get","gameMapSize","width","max","map","r","height","isBlank","context","getContext","filter","globalAlpha","drawImage","imageSmoothingEnabled","drawPrefabs","drawMark","customizeSignByPrefabCategory","prefab","pfName","name","toLocaleLowerCase","includes","fillStyle","strokeStyle","offsetX","offsetY","charOffsetX","charOffsetY","i","length","prefabInfo","font","family","textAlign","textBaseline","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","asyncFunc","workerPromises","push","shift","prev","waitAnimationFrame","Error","t","message","requireType","o","gameCoords","c","type","canvasEventToGameCoords","event","mapSize","canvasSize","gx","gz","floor","id","e","document","getElementById","lastChild","removeChild","d","toFixed","requestAnimationFrame","elevation","y","fileName","a","createElement","download","href","toDataURL","click","OffscreenCanvas","convertToBlob","msec","s","FONT_FACE","FontFace","load","then","fonts","add","onmessage","data","Object","assign","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}