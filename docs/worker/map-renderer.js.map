{"version":3,"sources":["webpack://7dtd-map/./src/lib/image-bitmap-holder.ts","webpack://7dtd-map/./src/lib/map.ts","webpack://7dtd-map/./src/lib/throttled-invoker.ts","webpack://7dtd-map/./src/lib/utils.ts","webpack://7dtd-map/./src/worker/map-renderer.ts","webpack://7dtd-map/webpack/bootstrap","webpack://7dtd-map/webpack/startup"],"names":["label","original","imgAge","o","fallbackPromise","lastAccessAt","this","Blob","type","toLowerCase","_png","imageBitmapToPngBlob","setImg","Date","now","img","getFallback","getImageBitmap","console","debug","createImageBitmap","setTimeout","expireImage","requireNonnull","close","markChar","putText","ctx","text","x","z","size","lineWidth","Math","round","strokeStyle","strokeText","fillText","canvas","fontFace","brightness","markerCoords","scale","showPrefabs","prefabs","signSize","signAlpha","biomesAlpha","splat3Alpha","splat4Alpha","radAlpha","throttledUpdater","updateImmediately","_biomesImg","_splat3Img","_splat4Img","_radImg","ImageBitmapHolder","rects","Promise","all","get","width","max","map","r","height","time","isBlank","inGameSize","context","getContext","filter","globalAlpha","drawImage","imageSmoothingEnabled","drawPrefabs","drawMark","timeEnd","font","family","fillStyle","textAlign","textBaseline","offsetX","offsetY","charOffsetX","charOffsetY","i","length","prefab","asyncFunc","updateRequest","workerPromise","async","waitAnimationFrame","t","message","Error","requireType","id","e","document","getElementById","lastChild","removeChild","d","toFixed","requestAnimationFrame","elevation","event","gx","gz","fileName","a","createElement","download","href","toDataURL","click","OffscreenCanvas","convertToBlob","FONT_FACE","FontFace","load","then","fonts","add","update","onmessage","data","Object","assign","postMessage","mapSize","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"mappings":"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","file":"worker/map-renderer.js","sourcesContent":["import { imageBitmapToPngBlob, requireNonnull } from \"./utils\";\n\nconst IMG_AGE_MSEC = 10000;\n\nexport class ImageBitmapHolder {\n  private label;\n  _png: PngBlob | Promise<PngBlob>;\n  private img?: ImageBitmap | null;\n  private fallbackPromise: Promise<ImageBitmap> | null = null;\n  private lastAccessAt = 0;\n  private imgAge;\n\n  constructor(label: string, original: PngBlob | ImageBitmap, imgAge = IMG_AGE_MSEC) {\n    this.label = label;\n    if (isPngBlob(original)) {\n      this._png = original;\n    } else {\n      this._png = imageBitmapToPngBlob(original);\n      this.setImg(original);\n    }\n    this.imgAge = imgAge;\n  }\n\n  async get(): Promise<ImageBitmap> {\n    this.lastAccessAt = Date.now();\n    return this.img ?? this.fallbackPromise ?? this.getFallback();\n  }\n\n  private async getFallback() {\n    this.fallbackPromise = this.getImageBitmap();\n    return this.fallbackPromise;\n  }\n\n  private async getImageBitmap() {\n    console.debug(\"Fallback\", this.label);\n    const img = await createImageBitmap(await this._png);\n    this.setImg(img);\n    this.fallbackPromise = null;\n    return img;\n  }\n\n  private setImg(img: ImageBitmap) {\n    this.img = img;\n    setTimeout(() => this.expireImage(), this.imgAge);\n  }\n\n  private expireImage() {\n    if (Date.now() - this.lastAccessAt > this.imgAge) {\n      console.debug(\"Expire\", this.label);\n      requireNonnull(this.img).close();\n      this.img = null;\n    } else {\n      setTimeout(() => this.expireImage(), this.imgAge);\n    }\n  }\n}\n\nfunction isPngBlob(o: unknown): o is PngBlob {\n  return o instanceof Blob && o.type.toLowerCase() === \"image/png\";\n}\n","import { ImageBitmapHolder } from \"./image-bitmap-holder\";\nimport throttledInvoker from \"./throttled-invoker\";\n\nconst signChar = \"‚úò\";\nconst markChar = \"üö©Ô∏è\";\n\nexport default class GameMap {\n  brightness = \"100%\";\n  markerCoords: Coords | null = null;\n  scale = 0.1;\n  showPrefabs = true;\n  prefabs: HighlightedPrefab[] = [];\n  signSize = 200;\n  signAlpha = 1;\n  biomesAlpha = 1;\n  splat3Alpha = 1;\n  splat4Alpha = 1;\n  radAlpha = 1;\n\n  canvas: OffscreenCanvas;\n  throttledUpdater = throttledInvoker(() => this.updateImmediately());\n\n  private _biomesImg: ImageBitmapHolder | null = null;\n  private _splat3Img: ImageBitmapHolder | null = null;\n  private _splat4Img: ImageBitmapHolder | null = null;\n  private _radImg: ImageBitmapHolder | null = null;\n  private fontFace: FontFace;\n\n  constructor(canvas: OffscreenCanvas, fontFace: FontFace) {\n    this.canvas = canvas;\n    this.fontFace = fontFace;\n  }\n\n  set biomesImg(img: ImageBitmap | PngBlob | null) {\n    this._biomesImg = img ? new ImageBitmapHolder(\"biomes\", img) : null;\n  }\n  set splat3Img(img: ImageBitmap | PngBlob | null) {\n    this._splat3Img = img ? new ImageBitmapHolder(\"splat3\", img) : null;\n  }\n  set splat4Img(img: ImageBitmap | PngBlob | null) {\n    this._splat4Img = img ? new ImageBitmapHolder(\"splat4\", img) : null;\n  }\n  set radImg(img: ImageBitmap | PngBlob | null) {\n    this._radImg = img ? new ImageBitmapHolder(\"rad\", img) : null;\n  }\n\n  async inGameSize(): Promise<RectSize> {\n    const rects = await Promise.all([this._biomesImg?.get(), this._splat3Img?.get(), this._splat4Img?.get()]);\n    return {\n      width: Math.max(...rects.map((r) => r?.width ?? 0)),\n      height: Math.max(...rects.map((r) => r?.height ?? 0)),\n    };\n  }\n\n  async update(): Promise<void> {\n    await this.throttledUpdater();\n  }\n\n  private isBlank(): boolean {\n    return !this._biomesImg && !this._splat3Img && !this._splat4Img;\n  }\n\n  async updateImmediately(): Promise<void> {\n    console.time(\"Map Update\");\n\n    if (this.isBlank()) {\n      this.canvas.width = 1;\n      this.canvas.height = 1;\n      return;\n    }\n\n    const { width, height } = await this.inGameSize();\n\n    this.canvas.width = width * this.scale;\n    this.canvas.height = height * this.scale;\n\n    const context = this.canvas.getContext(\"2d\");\n    if (!context) return;\n    context.scale(this.scale, this.scale);\n    context.filter = `brightness(${this.brightness})`;\n\n    if (this._biomesImg && this.biomesAlpha !== 0) {\n      context.globalAlpha = this.biomesAlpha;\n      context.drawImage(await this._biomesImg.get(), 0, 0, width, height);\n    }\n    if (this._splat3Img && this.splat3Alpha !== 0) {\n      context.globalAlpha = this.splat3Alpha;\n      context.drawImage(await this._splat3Img.get(), 0, 0, width, height);\n    }\n    if (this._splat4Img && this.splat4Alpha !== 0) {\n      context.globalAlpha = this.splat4Alpha;\n      context.drawImage(await this._splat4Img.get(), 0, 0, width, height);\n    }\n\n    context.filter = \"none\";\n    if (this._radImg && this.radAlpha !== 0) {\n      context.globalAlpha = this.radAlpha;\n      context.imageSmoothingEnabled = false;\n      context.drawImage(await this._radImg.get(), 0, 0, width, height);\n      context.imageSmoothingEnabled = true;\n    }\n\n    context.globalAlpha = this.signAlpha;\n    if (this.showPrefabs) {\n      this.drawPrefabs(context, width, height);\n    }\n    if (this.markerCoords) {\n      this.drawMark(context, width, height);\n    }\n    console.timeEnd(\"Map Update\");\n  }\n\n  private drawPrefabs(ctx: OffscreenCanvasRenderingContext2D, width: number, height: number) {\n    ctx.font = `${this.signSize}px ${this.fontFace?.family ?? \"\"}`;\n    ctx.fillStyle = \"red\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n\n    const offsetX = width / 2;\n    const offsetY = height / 2;\n\n    const charOffsetX = Math.round(this.signSize * 0.01);\n    const charOffsetY = Math.round(this.signSize * 0.05);\n\n    // Inverted iteration to overwrite signs by higher order prefabs\n    for (let i = this.prefabs.length - 1; i >= 0; i -= 1) {\n      const prefab = this.prefabs[i];\n      const x = offsetX + prefab.x + charOffsetX;\n      // prefab vertical positions are inverted for canvas coodinates\n      const z = offsetY - prefab.z + charOffsetY;\n      putText(ctx, { text: signChar, x, z, size: this.signSize });\n    }\n  }\n\n  private drawMark(ctx: OffscreenCanvasRenderingContext2D, width: number, height: number) {\n    if (!this.markerCoords) return;\n\n    ctx.font = `${this.signSize}px ${this.fontFace?.family ?? \"\"}`;\n    ctx.fillStyle = \"red\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"alphabetic\";\n\n    const offsetX = width / 2;\n    const offsetY = height / 2;\n    const charOffsetX = -1 * Math.round(this.signSize * 0.32);\n    const charOffsetY = -1 * Math.round(this.signSize * 0.1);\n\n    const x = offsetX + this.markerCoords.x + charOffsetX;\n    // prefab vertical positions are inverted for canvas coodinates\n    const z = offsetY - this.markerCoords.z + charOffsetY;\n\n    putText(ctx, { text: markChar, x, z, size: this.signSize });\n    ctx.strokeText(markChar, x, z);\n    ctx.fillText(markChar, x, z);\n  }\n}\n\ninterface MapSign {\n  text: string;\n  x: number;\n  z: number;\n  size: number;\n}\n\nfunction putText(ctx: OffscreenCanvasRenderingContext2D, { text, x, z, size }: MapSign) {\n  ctx.lineWidth = Math.round(size * 0.2);\n  ctx.strokeStyle = \"rgba(0, 0, 0, 0.8)\";\n  ctx.strokeText(text, x, z);\n\n  ctx.lineWidth = Math.round(size * 0.1);\n  ctx.strokeStyle = \"white\";\n  ctx.strokeText(text, x, z);\n\n  ctx.fillText(text, x, z);\n}\n","import { waitAnimationFrame } from \"./utils\";\n\nexport default function throttledInvoker(asyncFunc: () => Promise<void>): () => Promise<void> {\n  let updateRequest = false;\n  let workerPromise: Promise<void> | null = null;\n  return async () => {\n    updateRequest = true;\n\n    if (workerPromise) {\n      return;\n    }\n\n    workerPromise = (async () => {\n      while (updateRequest) {\n        updateRequest = false;\n        await asyncFunc();\n        await waitAnimationFrame();\n      }\n      workerPromise = null;\n    })();\n  };\n}\n","export function requireNonnull<T>(t: T | undefined | null, message = () => `Unexpected state: ${t}`): T {\n  if (t) return t;\n  else throw Error(message());\n}\n\nexport function requireType<T>(o: unknown, t: { new (...a: unknown[]): T }, message = () => `Unexpected type: ${o}`): T {\n  if (o instanceof t) return o;\n  throw Error(message());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | null | undefined, t?: { new (...a: unknown[]): T }): T {\n  const e = requireNonnull(\n    document.getElementById(requireNonnull(id, () => `Element ID must not null: ${id}`)),\n    () => `Element not found: #${id}`\n  );\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance(d: number): string {\n  if (d < 1000) {\n    return `${d}m`;\n  }\n  return `${(d / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport function formatCoords(\n  map: RectSize,\n  canvas: RectSize,\n  elevation: (coods: Coords, width: number) => number | null,\n  event: EventOffsets | null\n): string {\n  if (!event) return \"E/W: -, N/S: -, Elev: -\";\n\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * map.width) / canvas.width;\n  const gz = (event.offsetY * map.height) / canvas.height;\n  if (gx < 0 || gx >= map.width || gz < 0 || gz >= map.height) {\n    return \"E/W: -, N/S: -, Elev: -\";\n  }\n\n  // in-game coords (center offset)\n  const x = Math.round(gx - map.width / 2);\n  const z = Math.round(map.height / 2 - gz);\n  const e = elevation({ x: Math.round(gx), z: Math.round(gz) }, map.width) ?? \"-\";\n  return `E/W: ${x}, N/S: ${z}, Elev: ${e}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n\nexport async function imageBitmapToPngBlob(img: ImageBitmap): Promise<PngBlob> {\n  const canvas = new OffscreenCanvas(img.height, img.width);\n  const context = requireNonnull(canvas.getContext(\"2d\"));\n  context.drawImage(img, 0, 0);\n  return (await canvas.convertToBlob({ type: \"image/png\" })) as PngBlob;\n}\n","import { FontFaceSet } from \"css-font-loading-module\";\nimport GameMap from \"../lib/map\";\n\ndeclare const fonts: FontFaceSet;\n\nexport type InMessage = Partial<\n  Pick<\n    GameMap,\n    | \"canvas\"\n    | \"biomesImg\"\n    | \"splat3Img\"\n    | \"splat4Img\"\n    | \"radImg\"\n    | \"biomesAlpha\"\n    | \"splat3Alpha\"\n    | \"splat4Alpha\"\n    | \"radAlpha\"\n    | \"showPrefabs\"\n    | \"brightness\"\n    | \"scale\"\n    | \"signSize\"\n    | \"signAlpha\"\n    | \"prefabs\"\n    | \"markerCoords\"\n  >\n>;\n\nexport interface OutMessage {\n  mapSize: RectSize;\n}\n\ndeclare function postMessage(message: OutMessage): void;\n\nconst FONT_FACE = new FontFace(\"Noto Sans\", \"url(../NotoEmoji-Regular.ttf)\");\n\nlet map: GameMap | null = null;\n\nFONT_FACE.load().then(() => {\n  fonts.add(FONT_FACE);\n  map?.update();\n});\n\nonmessage = async (event: MessageEvent<InMessage>) => {\n  const message = event.data;\n  console.debug(message);\n  if (!map) {\n    if (message.canvas) {\n      map = new GameMap(message.canvas, FONT_FACE);\n    } else {\n      throw Error(\"Unexpected state\");\n    }\n  }\n\n  await Object.assign(map, message).update();\n\n  postMessage({ mapSize: await map.inGameSize() });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(179);\n"],"sourceRoot":""}