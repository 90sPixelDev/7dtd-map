!function(e){var t={};function n(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return e[s].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(s,a,function(t){return e[t]}.bind(null,a));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);class s{constructor(e,t){this.window=e,this.canvas=t,this.showBiomes=!0,this.showSplat3=!0,this.showRad=!0,this.showPrefabs=!0,this.biomesImg=null,this.splat3Img=null,this.radImg=null,this.updateRequest=null,this.brightness="100%",this.scale="0.1",this.signSize=200,this.prefabs=[],this.signChar="âœ—",this.mapWidth=0,this.mapHeight=0}get width(){return Math.max(this.biomesImg?this.biomesImg.width:0,this.splat3Img?this.splat3Img.width:0)}get height(){return Math.max(this.biomesImg?this.biomesImg.height:0,this.splat3Img?this.splat3Img.height:0)}update(){this.updateRequest||(this.updateRequest=this.window.requestAnimationFrame(()=>this.updateImmediately()))}updateImmediately(){this.canvas.width=this.width*this.scale,this.canvas.height=this.height*this.scale;const e=this.canvas.getContext("2d");e.scale(this.scale,this.scale),e.filter=`brightness(${this.brightness})`,this.biomesImg&&this.showBiomes&&e.drawImage(this.biomesImg,0,0,this.width,this.height),this.splat3Img&&this.showSplat3&&e.drawImage(this.splat3Img,0,0,this.width,this.height),this.radImg&&this.showRad&&(e.filter="url(#rad_filter)",e.imageSmoothingEnabled=!1,e.drawImage(this.radImg,0,0,this.width,this.height),e.imageSmoothingEnabled=!0),e.filter="none",this.showPrefabs&&function(e,t){t.font=`${e.signSize}px sans-serif`,t.lineWidth=Math.round(.08*e.signSize),t.strokeStyle="white",t.fillStyle="red",t.textAlign="center",t.textBaseline="middle",t.shadowColor="black";const n=e.width/2,s=e.height/2;e.prefabs.forEach(a=>{const o=n+a.x,i=s-a.y;t.shadowBlur=20,t.strokeText(e.signChar,o,i),t.shadowBlur=0,t.fillText(e.signChar,o,i)})}(this,e),this.updateRequest=null,console.log("update")}async setBiomes(e){const t=await a(this,e);t&&(this.biomesImg=t)}async setSplat3(e){const t=await a(this,e);t&&(this.splat3Img=t)}async setRad(e){const t=await a(this,e);t&&(this.radImg=t)}}async function a(e,t){if(!t)return null;const n=await async function(e,t){return new Promise((n,s)=>{const a=new e.window.FileReader;a.onerror=s,a.onload=(()=>n(a.result)),a.readAsDataURL(t)})}(e,t);return async function(e,t){return new Promise((n,s)=>{const a=new e.window.Image;a.addEventListener("load",()=>n(a)),a.addEventListener("error",s),a.src=t})}(e,n)}function o(){const e=document.getElementById("cood_we"),t=document.getElementById("cood_ns"),n=document.getElementById("download"),a=document.getElementById("show_biomes"),o=document.getElementById("biomes"),i=document.getElementById("show_splat3"),r=document.getElementById("splat3"),d=document.getElementById("show_radiation"),l=document.getElementById("radiation"),c=document.getElementById("show_prefabs"),u=document.getElementById("prefabs"),m=document.getElementById("scale"),h=document.getElementById("sign_size"),p=document.getElementById("brightness"),g=document.getElementById("prefabs_filter"),f=document.getElementById("prefabs_filter_presets"),y=document.getElementById("prefabs_num"),w=document.getElementById("prefabs_list"),b=document.getElementById("map"),v=new s(window,b);let E=[],I=[];function x(){!function(){0===E.length?y.textContent="No prefabs":0===g.value.trim().length?y.textContent="All prefabs":y.textContent=`Hit ${I.length} prefabs`;const e=document.createElement("ul");I.forEach(t=>{const n=document.createElement("li");n.textContent=`${t.name} (${t.x}, ${t.y})`,e.appendChild(n)}),w.replaceChild(e,w.firstChild)}(),v.update()}async function L(e){"biomes.png"===e.name?(console.log("Load biome"),"image/png"!==e.type&&console.warn("Unexpected biomes.png file type: %s",e.type),await v.setBiomes(e),o.value=""):"splat3.png"===e.name?(console.log("Load splat3"),"image/png"!==e.type&&console.warn("Unexpected splat3.png file type: %s",e.type),await v.setSplat3(e),r.value=""):"radiation.png"===e.name?(console.log("Load radiation"),"image/png"!==e.type&&console.warn("Unexpected splat3.png file type: %s",e.type),await v.setRad(e),l.value=""):"prefabs.xml"===e.name?(console.log("Update prefab list"),"text/xml"!==e.type&&console.warn("Unexpected prefabs.xml file type: %s",e.type),await B(e),S(),v.prefabs=I,u.value=""):console.warn("Unknown file: %s, %s",e.name,e.type)}async function B(e){const t=await async function(e){return new Promise((t,n)=>{const s=new FileReader;s.onerror=n,s.onload=(()=>t(s.result)),s.readAsText(e)})}(e);if(!t)return;const n=(new DOMParser).parseFromString(t,"text/xml");E=Array.from(n.getElementsByTagName("decoration")).map(e=>{const t=e.getAttribute("position").split(",");return{name:e.getAttribute("name"),x:parseInt(t[0],10),y:parseInt(t[2],10)}})}function S(){const e=g.value.trim();return(I=e?E.filter(t=>t.name.includes(e)):E).sort((e,t)=>e.name>t.name?1:e.name<t.name?-1:0),I}n.addEventListener("click",()=>{const e=document.createElement("a");e.href=b.toDataURL("image/png");const t=g.value?`-${g.value}`:"";e.download=`7DtD-renderer${t}.png`,e.click()}),o.addEventListener("input",async()=>{console.log("Load biome"),v.setBiomes(o.files[0]),x()}),r.addEventListener("input",async()=>{console.log("Load splat3"),v.setSplat3(r.files[0]),x()}),l.addEventListener("input",async()=>{console.log("Load radiation"),v.setRad(l.files[0]),x()}),u.addEventListener("input",async()=>{console.log("Load prefabs"),await async function(){if(0===u.files.length)return console.log("No file"),void(E=[]);await B(u.files[0])}(),S(),v.prefabs=I,x()}),g.addEventListener("input",()=>{console.log("Update prefab list"),S(),v.prefabs=I,x()}),v.showBiomes=a.checked,v.showSplat3=i.checked,v.showRad=d.checked,v.showPrefabs=c.checked,v.signSize=h.value,v.brightness=`${p.value}%`,v.scale=m.value,[a,i,d,c,h,p,m].forEach(e=>{e.addEventListener("input",()=>{v.showBiomes=a.checked,v.showSplat3=i.checked,v.showRad=d.checked,v.showPrefabs=c.checked,v.signSize=h.value,v.brightness=`${p.value}%`,v.scale=m.value,console.log(v),x()})}),document.addEventListener("dragenter",e=>{e.dataTransfer.types.includes("Files")&&(e.preventDefault(),document.body.classList.add("dragovered"))}),document.addEventListener("dragover",e=>{e.dataTransfer.types.includes("Files")&&(e.preventDefault(),e.dataTransfer.dropEffect="copy",document.body.classList.add("dragovered"))}),document.addEventListener("dragleave",e=>{0===e.clientX&&0===e.clientY&&(e.preventDefault(),document.body.classList.remove("dragovered"))}),document.addEventListener("drop",async e=>{e.dataTransfer.types.includes("Files")&&(e.preventDefault(),document.body.classList.remove("dragovered"),await Promise.all(Array.from(e.dataTransfer.files).map(L)),x())}),Array.from(document.querySelectorAll("[data-source-input")).forEach(e=>{const t=document.querySelector(`#${e.dataset.sourceInput}`);e.textContent=t.value,t.addEventListener("input",()=>{e.textContent=t.value})}),b.addEventListener("mousemove",n=>{e.textContent=-Math.round((.5-n.offsetX/b.width)*v.width),t.textContent=Math.round((.5-n.offsetY/b.height)*v.height)}),b.addEventListener("mouseout",()=>{e.textContent="-",t.textContent="-"}),Array.from(f.getElementsByTagName("button")).forEach(e=>{e.addEventListener("click",()=>{g.value=e.dataset.filter||e.textContent,S(),v.prefabs=I,x()})}),x()}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",o):o()}]);