!function(t){var e={};function s(i){if(e[i])return e[i].exports;var h=e[i]={i:i,l:!1,exports:{}};return t[i].call(h.exports,h,h.exports,s),h.l=!0,h.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var h in t)s.d(i,h,function(e){return t[e]}.bind(null,h));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=3)}({3:function(t,e,s){"use strict";s.r(e);class i{constructor(t,e){this.window=t,this.canvas=e,this.showBiomes=!0,this.showSplat3=!0,this.showRad=!0,this.showPrefabs=!0,this.biomesImg=null,this.splat3Img=null,this.radImg=null,this.brightness="100%",this.scale="0.1",this.signSize=200,this.prefabs=[],this.signChar="âœ—",this.updateRequest=null}get width(){return Math.max(this.biomesImg?this.biomesImg.width:0,this.splat3Img?this.splat3Img.width:0)}get height(){return Math.max(this.biomesImg?this.biomesImg.height:0,this.splat3Img?this.splat3Img.height:0)}update(){this.updateRequest||(this.updateRequest=this.window.requestAnimationFrame(()=>this.updateImmediately()))}updateImmediately(){this.canvas.width=this.width*this.scale,this.canvas.height=this.height*this.scale;const t=this.canvas.getContext("2d");t.scale(this.scale,this.scale),t.filter=`brightness(${this.brightness})`,this.biomesImg&&this.showBiomes&&t.drawImage(this.biomesImg,0,0,this.width,this.height),this.splat3Img&&this.showSplat3&&t.drawImage(this.splat3Img,0,0,this.width,this.height),t.filter="none",this.radImg&&this.showRad&&(t.imageSmoothingEnabled=!1,t.drawImage(this.radImg,0,0,this.width,this.height),t.imageSmoothingEnabled=!0),this.showPrefabs&&function(t,e){e.font=`${t.signSize}px sans-serif`,e.lineWidth=Math.round(.08*t.signSize),e.strokeStyle="white",e.fillStyle="red",e.textAlign="center",e.textBaseline="middle",e.shadowColor="black";const s=t.width/2,i=t.height/2;t.prefabs.forEach(h=>{const a=s+h.x,n=i-h.y;e.shadowBlur=20,e.strokeText(t.signChar,a,n),e.shadowBlur=0,e.fillText(t.signChar,a,n)})}(this,t),this.updateRequest=null,console.log("update")}}const h=new Set(["biomesImg","splat3Img","radImg","showBiomes","showSplat3","showRad","showPrefabs","brightness","scale","signSize","prefabs","signChar"]);let a;onmessage=(t=>{const{canvas:e,...s}=t.data;e&&(a?a.canvas=e:a=new i(self,e)),Object.keys(s).forEach(t=>{h.has(t)&&(a[t]=s[t])}),postMessage({mapSizes:{width:a.width,height:a.height}}),a.update()})}});