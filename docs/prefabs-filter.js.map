{"version":3,"sources":["webpack://7dtd-map/./src/lib/lazy-invoker.ts","webpack://7dtd-map/./src/lib/prefabs.ts","webpack://7dtd-map/./src/prefabs-filter.ts","webpack://7dtd-map/webpack/bootstrap","webpack://7dtd-map/webpack/startup"],"names":["asyncFunc","updateRequest","workerPromise","async","Promise","r","requestAnimationFrame","nameSorter","a","b","name","distSorter","dist","filterByPrefabs","prefabs","pattern","results","all","flatMap","prefab","m","matchAndHighlight","highlightedName","status","length","filterByBlocks","allPrefabs","blockPrefabIndex","blockLabels","matchedBlocks","Object","entries","reduce","arr","blockName","blockLabel","highlightedLabel","concat","matchBlocks","matchedPrefabBlocks","idx","block","forEach","p","count","matchPrefabTypes","keys","blocks","str","regex","isMatched","highlighted","replace","this","filtered","prevFiltered","filter","prefabsFilterString","blocksFilterString","markCoords","prevMarkCoords","updateListeners","lazyUpdater","updateImmediately","map","func","targetCoords","baseCoords","Math","round","sqrt","x","z","sort","updateData","f","s","trim","RegExp","push","onmessage","data","assign","update","addUpdateListener","u","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"mappings":"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","file":"prefabs-filter.js","sourcesContent":["export default function lazyInvoke(asyncFunc: () => Promise<void>): () => Promise<void> {\n  let updateRequest = null;\n  let workerPromise: Promise<void> | null = null;\n  return async () => {\n    updateRequest = true;\n\n    if (workerPromise) {\n      return;\n    }\n\n    workerPromise = (async () => {\n      while (updateRequest) {\n        updateRequest = false;\n        await asyncFunc();\n        await waitAnimationFrame();\n      }\n      workerPromise = null;\n    })();\n  };\n}\n\nfunction waitAnimationFrame() {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n","import lazy from \"./lazy-invoker\";\n\ndeclare interface PrefabFilter {\n  name: string;\n  func: (prefabs: Prefabs, pattern: RegExp) => HighlightedPrefab[];\n  pattern: RegExp;\n}\n\nexport declare interface PrefabUpdate {\n  status: string;\n  prefabs: HighlightedPrefab[];\n}\n\ndeclare interface PrefabHighlightedBlocks {\n  [prefabName: string]: HighlightedBlock[];\n}\n\nexport default class Prefabs {\n\n  all: Prefab[];\n  blockLabels: BlockLabels;\n  blockPrefabIndex: BlockPrefabIndex;\n  filter: PrefabFilter | null;\n  filtered: HighlightedPrefab[];\n  lazyUpdater: () => void;\n  markCoords: Coords | null;\n  prevFiltered: HighlightedPrefab[];\n  prevMarkCoords: Coords | null;\n  status: string;\n  updateListeners: ((u: PrefabUpdate) => void)[];\n\n  constructor() {\n    this.all = [];\n    this.filtered = [];\n    this.prevFiltered = [];\n    this.filter = null;\n    this.prefabsFilterString = \"\";\n    this.blocksFilterString = \"\";\n    this.markCoords = null;\n    this.prevMarkCoords = null;\n    this.blockPrefabIndex = {};\n    this.blockLabels = {};\n    this.updateListeners = [];\n    this.status = \"\";\n    this.lazyUpdater = lazy(async () => this.updateImmediately());\n  }\n  update(): void {\n    this.lazyUpdater();\n  }\n  updateImmediately(): void {\n    applyFilter(this);\n    updateDist(this);\n    sort(this);\n    const updateData: PrefabUpdate = { status: this.status, prefabs: [] };\n    if (this.prevFiltered !== this.filtered || this.prevMarkCoords !== this.markCoords) {\n      updateData.prefabs = this.filtered;\n      this.prevFiltered = this.filtered;\n      this.prevMarkCoords = this.markCoords;\n    }\n    this.updateListeners.forEach((f) => f(updateData));\n  }\n  set prefabsFilterString(filter: string) {\n    const s = filter.trim();\n    if (s.length === 0) {\n      this.filter = null;\n    } else {\n      this.filter = {\n        name: \"prefab name\",\n        func: filterByPrefabs,\n        pattern: new RegExp(s, \"i\"),\n      };\n    }\n  }\n  set blocksFilterString(filter: string) {\n    const s = filter.trim();\n    if (s.length === 0) {\n      this.filter = null;\n    } else {\n      this.filter = {\n        name: \"block name\",\n        func: filterByBlocks,\n        pattern: new RegExp(s, \"i\"),\n      };\n    }\n  }\n  addUpdateListener(func: (update: PrefabUpdate) => void): void {\n    this.updateListeners.push(func);\n  }\n}\nfunction applyFilter(prefabs: Prefabs) {\n  if (prefabs.filter) {\n    prefabs.filtered = prefabs.filter.func(prefabs, prefabs.filter.pattern);\n  } else {\n    if (prefabs.all.length === 0) {\n      prefabs.status = \"No prefabs\";\n    } else {\n      prefabs.status = \"All prefabs\";\n    }\n    prefabs.filtered = prefabs.all;\n  }\n}\nfunction updateDist(map: Prefabs) {\n  if (map.markCoords) {\n    map.filtered.forEach((p) => (p.dist = calcDist(p, map.markCoords as Coords)));\n  } else {\n    map.filtered.forEach((p) => (p.dist = null));\n  }\n}\nfunction sort(prefabs: Prefabs) {\n  if (prefabs.markCoords) {\n    prefabs.filtered.sort(distSorter);\n  } else {\n    prefabs.filtered.sort(nameSorter);\n  }\n}\nfunction nameSorter(a: { name: string }, b: { name: string }) {\n  if (a.name > b.name) return 1;\n  if (a.name < b.name) return -1;\n  return 0;\n}\nfunction distSorter(a: HighlightedPrefab, b: HighlightedPrefab) {\n  if (!a.dist || !b.dist) return nameSorter(a, b);\n  if (a.dist > b.dist) return 1;\n  if (a.dist < b.dist) return -1;\n  return 0;\n}\nfunction filterByPrefabs(prefabs: Prefabs, pattern: RegExp) {\n  const results = prefabs.all.flatMap((prefab) => {\n    const m = matchAndHighlight(prefab.name, pattern);\n    if (m) {\n      // Clone and add a new field;\n      return { ...prefab, highlightedName: m };\n    }\n    return [];\n  });\n  prefabs.status = `${results.length} matched prefabs`;\n  return results;\n}\nfunction filterByBlocks(prefabs: Prefabs, pattern: RegExp) {\n  const { all: allPrefabs, blockPrefabIndex, blockLabels } = prefabs;\n  const matchedBlocks = matchBlocks(pattern, blockPrefabIndex, blockLabels);\n  if (matchedBlocks.length === 0) {\n    prefabs.status = \"No matched blocks\";\n    return [];\n  }\n  const matchedPrefabBlocks = matchPrefabTypes(matchedBlocks);\n  if (Object.keys(matchedPrefabBlocks).length === 0) {\n    prefabs.status = `No prefabs, ${matchedBlocks.length} matched blocks`;\n    return [];\n  }\n  const results = allPrefabs.flatMap((prefab: Prefab) => {\n    const blocks = matchedPrefabBlocks[prefab.name];\n    if (!blocks) {\n      return [];\n    }\n    // Clone and add a new field;\n    return { ...prefab, matchedBlocks: blocks };\n  });\n  prefabs.status = `${results.length} prefabs, ${matchedBlocks.length} matched blocks`;\n  return results;\n}\n\nfunction matchPrefabTypes(matchedBlocks: HighlightedBlock[]): PrefabHighlightedBlocks {\n  return matchedBlocks.reduce<PrefabHighlightedBlocks>((idx, block) => {\n    const { name, highlightedName, highlightedLabel } = block;\n    block.prefabs?.forEach(p => {\n      const b = {\n        name,\n        highlightedName,\n        highlightedLabel,\n        count: p.count,\n      };\n      idx[p.name] = (idx[p.name] || []).concat(b);\n    });\n    return idx;\n  }, {});\n}\n\nfunction matchBlocks(pattern: RegExp, blockPrefabIndex: BlockPrefabIndex, blockLabels: BlockLabels) {\n  return (Object.entries(blockPrefabIndex) as [string, { name: string; count: number }[]][]).reduce<HighlightedBlock[]>(\n    (arr, [blockName, prefabs]) => {\n      const highlightedName = matchAndHighlight(blockName, pattern);\n      const blockLabel = blockLabels[blockName];\n      const highlightedLabel = blockLabel && matchAndHighlight(blockLabel, pattern);\n      if (highlightedName || highlightedLabel) {\n        return arr.concat({\n          name: blockName,\n          highlightedName: highlightedName || blockName,\n          highlightedLabel: highlightedLabel || blockLabel,\n          prefabs,\n        });\n      }\n      return arr;\n    },\n    []\n  );\n}\nfunction calcDist(targetCoords: Coords, baseCoords: Coords) {\n  return Math.round(Math.sqrt((targetCoords.x - baseCoords.x) ** 2 + (targetCoords.z - baseCoords.z) ** 2));\n}\nfunction matchAndHighlight(str: string, regex: RegExp) {\n  let isMatched = false;\n  const highlighted = str.replace(regex, (m) => {\n    isMatched = m.length > 0;\n    return `<mark>${m}</mark>`;\n  });\n  return isMatched ? highlighted : null;\n}\n","import Prefabs from \"./lib/prefabs\";\n\nexport declare interface PrefabsFilterInMessage {\n  all: Prefab[];\n  prefabsFilterString: string;\n  blocksFilterString: string;\n  markCoords: Coords | null;\n  blockPrefabIndex: BlockPrefabIndex;\n  blockLabels: BlockLabels;\n}\n\nconst prefabs = new Prefabs();\n\nonmessage = ({data}) => {\n  Object.assign(prefabs, data);\n  prefabs.update();\n};\n\nprefabs.addUpdateListener(u => postMessage(u));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(594);\n"],"sourceRoot":""}