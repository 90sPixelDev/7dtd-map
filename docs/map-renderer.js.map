{"version":3,"sources":["webpack://7dtd-map/./src/lib/map.ts","webpack://7dtd-map/./src/lib/throttled-invoker.ts","webpack://7dtd-map/./src/lib/utils.ts","webpack://7dtd-map/./src/map-renderer.ts","webpack://7dtd-map/webpack/bootstrap","webpack://7dtd-map/webpack/startup"],"names":["markChar","putText","ctx","text","x","z","size","lineWidth","Math","round","strokeStyle","strokeText","fillText","canvas","fontFace","this","showPrefabs","biomesImg","biomesAlpha","splat3Img","splat3Alpha","splat4Img","splat4Alpha","radImg","radAlpha","brightness","scale","signSize","signAlpha","prefabs","FontFace","load","then","ff","fonts","add","markerCoords","throttledUpdater","updateImmediately","max","width","height","console","time","timeEnd","isBlank","context","getContext","filter","globalAlpha","drawImage","imageSmoothingEnabled","map","font","family","fillStyle","textAlign","textBaseline","offsetX","offsetY","charOffsetX","charOffsetY","i","length","prefab","drawPrefabs","drawMark","asyncFunc","updateRequest","workerPromise","async","waitAnimationFrame","requireNonnull","t","message","Error","requireType","o","id","e","document","getElementById","lastChild","removeChild","d","toFixed","Promise","r","requestAnimationFrame","elevation","event","gx","gz","fileName","a","createElement","download","href","toDataURL","click","onmessage","inMessage","data","Object","assign","update","postMessage","mapSize","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"mappings":"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","file":"map-renderer.js","sourcesContent":["import { FontFaceSet } from \"css-font-loading-module\";\nimport throttledInvoker from \"./throttled-invoker\";\n\nconst signChar = \"✘\";\nconst markChar = \"🚩️\";\n\ndeclare const fonts: FontFaceSet;\n\nexport default class GameMap {\n  biomesImg: ImageBitmap | null;\n  biomesAlpha: number;\n  splat3Img: ImageBitmap | null;\n  splat3Alpha: number;\n  splat4Img: ImageBitmap | null;\n  splat4Alpha: number;\n  radImg: ImageBitmap | null;\n  radAlpha: number;\n  brightness: string;\n  canvas: OffscreenCanvas;\n  fontFace: FontFace | null = null;\n  throttledUpdater: () => Promise<void>;\n  markerCoords: Coords | null;\n  scale: number;\n  showPrefabs: boolean;\n  signSize: number;\n  signAlpha: number;\n  prefabs: HighlightedPrefab[];\n\n  constructor(canvas: OffscreenCanvas) {\n    this.canvas = canvas;\n    this.showPrefabs = true;\n    this.biomesImg = null;\n    this.biomesAlpha = 1;\n    this.splat3Img = null;\n    this.splat3Alpha = 1;\n    this.splat4Img = null;\n    this.splat4Alpha = 1;\n    this.radImg = null;\n    this.radAlpha = 1;\n    this.brightness = \"100%\";\n    this.scale = 0.1;\n    this.signSize = 200;\n    this.signAlpha = 1;\n    this.prefabs = [];\n\n    const fontFace = new FontFace(\"Noto Sans\", \"url(NotoEmoji-Regular.ttf)\");\n    fontFace.load().then((ff) => {\n      this.fontFace = ff;\n      fonts.add(ff);\n    });\n    this.markerCoords = null;\n\n    this.throttledUpdater = throttledInvoker(() => this.updateImmediately());\n  }\n\n  get width(): number {\n    return Math.max(this.biomesImg?.width ?? 0, this.splat3Img?.width ?? 0, this.splat4Img?.width ?? 0);\n  }\n\n  get height(): number {\n    return Math.max(this.biomesImg?.height ?? 0, this.splat3Img?.height ?? 0, this.splat4Img?.height ?? 0);\n  }\n\n  async update(): Promise<void> {\n    console.time(\"Map Update\");\n    await this.throttledUpdater();\n    console.timeEnd(\"Map Update\");\n  }\n\n  private isBlank(): boolean {\n    return !this.biomesImg && !this.splat3Img && !this.splat4Img;\n  }\n\n  async updateImmediately(): Promise<void> {\n    if (this.isBlank()) {\n      this.canvas.width = 1;\n      this.canvas.height = 1;\n      return;\n    }\n\n    this.canvas.width = this.width * this.scale;\n    this.canvas.height = this.height * this.scale;\n\n    const context = this.canvas.getContext(\"2d\");\n    if (!context) return;\n    context.scale(this.scale, this.scale);\n    context.filter = `brightness(${this.brightness})`;\n\n    if (this.biomesImg && this.biomesAlpha !== 0) {\n      context.globalAlpha = this.biomesAlpha;\n      context.drawImage(this.biomesImg, 0, 0, this.width, this.height);\n    }\n\n    if (this.splat3Img && this.splat3Alpha !== 0) {\n      context.globalAlpha = this.splat3Alpha;\n      context.drawImage(this.splat3Img, 0, 0, this.width, this.height);\n    }\n    if (this.splat4Img && this.splat4Alpha !== 0) {\n      context.globalAlpha = this.splat4Alpha;\n      context.drawImage(this.splat4Img, 0, 0, this.width, this.height);\n    }\n\n    context.filter = \"none\";\n    if (this.radImg && this.radAlpha !== 0) {\n      context.globalAlpha = this.radAlpha;\n      context.imageSmoothingEnabled = false;\n      context.drawImage(this.radImg, 0, 0, this.width, this.height);\n      context.imageSmoothingEnabled = true;\n    }\n\n    context.globalAlpha = this.signAlpha;\n    if (this.showPrefabs) {\n      drawPrefabs(this, context);\n    }\n    if (this.markerCoords) {\n      drawMark(this, context);\n    }\n  }\n}\n\nfunction drawPrefabs(map: GameMap, ctx: OffscreenCanvasRenderingContext2D) {\n  ctx.font = `${map.signSize}px ${map.fontFace?.family ?? \"\"}`;\n  ctx.fillStyle = \"red\";\n  ctx.textAlign = \"center\";\n  ctx.textBaseline = \"middle\";\n\n  const offsetX = map.width / 2;\n  const offsetY = map.height / 2;\n\n  const charOffsetX = Math.round(map.signSize * 0.01);\n  const charOffsetY = Math.round(map.signSize * 0.05);\n\n  // Inverted iteration to overwrite signs by higher order prefabs\n  for (let i = map.prefabs.length - 1; i >= 0; i -= 1) {\n    const prefab = map.prefabs[i];\n    const x = offsetX + prefab.x + charOffsetX;\n    // prefab vertical positions are inverted for canvas coodinates\n    const z = offsetY - prefab.z + charOffsetY;\n    putText(ctx, { text: signChar, x, z, size: map.signSize });\n  }\n}\n\nfunction drawMark(map: GameMap, ctx: OffscreenCanvasRenderingContext2D) {\n  if (!map.markerCoords) return;\n\n  ctx.font = `${map.signSize}px ${map.fontFace?.family ?? \"\"}`;\n  ctx.fillStyle = \"red\";\n  ctx.textAlign = \"left\";\n  ctx.textBaseline = \"alphabetic\";\n\n  const offsetX = map.width / 2;\n  const offsetY = map.height / 2;\n  const charOffsetX = -1 * Math.round(map.signSize * 0.32);\n  const charOffsetY = -1 * Math.round(map.signSize * 0.1);\n\n  const x = offsetX + map.markerCoords.x + charOffsetX;\n  // prefab vertical positions are inverted for canvas coodinates\n  const z = offsetY - map.markerCoords.z + charOffsetY;\n\n  putText(ctx, { text: markChar, x, z, size: map.signSize });\n  ctx.strokeText(markChar, x, z);\n  ctx.fillText(markChar, x, z);\n}\n\ninterface MapSign {\n  text: string;\n  x: number;\n  z: number;\n  size: number;\n}\n\nfunction putText(ctx: OffscreenCanvasRenderingContext2D, { text, x, z, size }: MapSign) {\n  ctx.lineWidth = Math.round(size * 0.2);\n  ctx.strokeStyle = \"rgba(0, 0, 0, 0.8)\";\n  ctx.strokeText(text, x, z);\n\n  ctx.lineWidth = Math.round(size * 0.1);\n  ctx.strokeStyle = \"white\";\n  ctx.strokeText(text, x, z);\n\n  ctx.fillText(text, x, z);\n}\n","import { waitAnimationFrame } from \"./utils\";\n\nexport default function throttledInvoker(asyncFunc: () => Promise<void>): () => Promise<void> {\n  let updateRequest = false;\n  let workerPromise: Promise<void> | null = null;\n  return async () => {\n    updateRequest = true;\n\n    if (workerPromise) {\n      return;\n    }\n\n    workerPromise = (async () => {\n      while (updateRequest) {\n        updateRequest = false;\n        await asyncFunc();\n        await waitAnimationFrame();\n      }\n      workerPromise = null;\n    })();\n  };\n}\n","export function requireNonnull<T>(t: T | undefined | null, message = () => `Unexpected state: ${t}`): T {\n  if (t) return t;\n  else throw Error(message());\n}\n\nexport function requireType<T>(o: unknown, t: { new (...a: unknown[]): T }, message = () => `Unexpected type: ${o}`): T {\n  if (o instanceof t) return o;\n  throw Error(message());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | null | undefined, t?: { new (...a: unknown[]): T }): T {\n  const e = requireNonnull(\n    document.getElementById(requireNonnull(id, () => `Element ID must not null: ${id}`)),\n    () => `Element not found: #${id}`\n  );\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance(d: number): string {\n  if (d < 1000) {\n    return `${d}m`;\n  }\n  return `${(d / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport function formatCoords(\n  map: RectSize,\n  canvas: RectSize,\n  elevation: (coods: Coords, width: number) => number | null,\n  event: EventOffsets | null\n): string {\n  if (!event) return \"E/W: -, N/S: -, Elev: -\";\n\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * map.width) / canvas.width;\n  const gz = (event.offsetY * map.height) / canvas.height;\n  if (gx < 0 || gx >= map.width || gz < 0 || gz >= map.height) {\n    return \"E/W: -, N/S: -, Elev: -\";\n  }\n\n  // in-game coords (center offset)\n  const x = Math.round(gx - map.width / 2);\n  const z = Math.round(map.height / 2 - gz);\n  const e = elevation({ x: Math.round(gx), z: Math.round(gz) }, map.width) ?? \"-\";\n  return `E/W: ${x}, N/S: ${z}, Elev: ${e}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n","import GameMap from \"./lib/map\";\n\nexport type MapRendererInMessage = Partial<\n  Pick<\n    GameMap,\n    | \"canvas\"\n    | \"biomesImg\"\n    | \"splat3Img\"\n    | \"splat4Img\"\n    | \"radImg\"\n    | \"biomesAlpha\"\n    | \"splat3Alpha\"\n    | \"splat4Alpha\"\n    | \"radAlpha\"\n    | \"showPrefabs\"\n    | \"brightness\"\n    | \"scale\"\n    | \"signSize\"\n    | \"signAlpha\"\n    | \"prefabs\"\n    | \"markerCoords\"\n  >\n>;\n\nexport interface MapRendererOutMessage {\n  mapSize: RectSize;\n}\n\ndeclare function postMessage(message: MapRendererOutMessage): void;\n\nlet map: GameMap | null = null;\nonmessage = async (event) => {\n  const inMessage = event.data as MapRendererInMessage;\n  if (!map) {\n    if (inMessage.canvas) {\n      map = new GameMap(inMessage.canvas);\n    } else {\n      throw Error(\"Unexpected state\");\n    }\n  }\n\n  await Object.assign(map, inMessage).update();\n\n  postMessage({\n    mapSize: {\n      width: map.width,\n      height: map.height,\n    },\n  });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(496);\n"],"sourceRoot":""}